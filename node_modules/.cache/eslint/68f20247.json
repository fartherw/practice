[{"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\main.js":"1","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\global.js":"2","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\App.vue":"3","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\router\\index.js":"4","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\index.js":"5","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\store\\index.js":"6","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\components\\MyButton.vue":"7","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\router\\routes.js":"8","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\http.js":"9","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\dashboard.js":"10","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\carousels.js":"11","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\ErrorPage.vue":"12","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home.vue":"13","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Login.vue":"14","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\router\\homeRoutes.js":"15","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\assets\\utils.js":"16","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\ProductSetting.vue":"17","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\system\\Account.vue":"18","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\GoodsSetting.vue":"19","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\OrderManager.vue":"20","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\MemberManager.vue":"21","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\GoodsManager.vue":"22","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\ClassiFication.vue":"23","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Dashboard\\Introduce.vue":"24","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Dashboard\\Add.vue":"25","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\BannerSetting.vue":"26","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Dashboard\\ControlPanel.vue":"27","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\RecommendSetting.vue":"28","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\components\\HomeMenu.vue":"29","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\GoodsSetting.js":"30","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\system.js":"31","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\model.js":"32","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\ProductSetting.js":"33","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\Order_detail.vue":"34","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\ClassiFication3.vue":"35","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\ClassiFication2.vue":"36"},{"size":4772,"mtime":1668601719931,"results":"37","hashOfConfig":"38"},{"size":140,"mtime":1668591465219,"results":"39","hashOfConfig":"38"},{"size":285,"mtime":1668601719849,"results":"40","hashOfConfig":"38"},{"size":1029,"mtime":1667825433408,"results":"41","hashOfConfig":"38"},{"size":883,"mtime":1668601758280,"results":"42","hashOfConfig":"38"},{"size":851,"mtime":1668605086815,"results":"43","hashOfConfig":"38"},{"size":1557,"mtime":1667825433407,"results":"44","hashOfConfig":"38"},{"size":693,"mtime":1668341429778,"results":"45","hashOfConfig":"38"},{"size":690,"mtime":1667825433405,"results":"46","hashOfConfig":"38"},{"size":844,"mtime":1668618553449,"results":"47","hashOfConfig":"38"},{"size":867,"mtime":1667825433405,"results":"48","hashOfConfig":"38"},{"size":319,"mtime":1667825433412,"results":"49","hashOfConfig":"38"},{"size":4833,"mtime":1668690391192,"results":"50","hashOfConfig":"38"},{"size":4983,"mtime":1667825433416,"results":"51","hashOfConfig":"38"},{"size":4761,"mtime":1668690135225,"results":"52","hashOfConfig":"38"},{"size":10252,"mtime":1667825433406,"results":"53","hashOfConfig":"38"},{"size":9540,"mtime":1668601720377,"results":"54","hashOfConfig":"38"},{"size":5050,"mtime":1668690953531,"results":"55","hashOfConfig":"38"},{"size":9522,"mtime":1668601720336,"results":"56","hashOfConfig":"38"},{"size":9555,"mtime":1668690417037,"results":"57","hashOfConfig":"38"},{"size":5639,"mtime":1668623764021,"results":"58","hashOfConfig":"38"},{"size":6165,"mtime":1668675625923,"results":"59","hashOfConfig":"38"},{"size":9078,"mtime":1668619533732,"results":"60","hashOfConfig":"38"},{"size":9403,"mtime":1668601720057,"results":"61","hashOfConfig":"38"},{"size":10428,"mtime":1668617781275,"results":"62","hashOfConfig":"38"},{"size":9544,"mtime":1668834521303,"results":"63","hashOfConfig":"38"},{"size":4570,"mtime":1668601719975,"results":"64","hashOfConfig":"38"},{"size":9577,"mtime":1668601720475,"results":"65","hashOfConfig":"38"},{"size":3096,"mtime":1669366653535,"results":"66","hashOfConfig":"38"},{"size":904,"mtime":1668601719852,"results":"67","hashOfConfig":"38"},{"size":551,"mtime":1668601719920,"results":"68","hashOfConfig":"38"},{"size":2823,"mtime":1668674244766,"results":"69","hashOfConfig":"38"},{"size":1830,"mtime":1668601719898,"results":"70","hashOfConfig":"38"},{"size":4532,"mtime":1668677102912,"results":"71","hashOfConfig":"38"},{"size":9300,"mtime":1669108225532,"results":"72","hashOfConfig":"38"},{"size":9603,"mtime":1669108225528,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vn4lxb",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\main.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\global.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\App.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\router\\index.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\index.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\store\\index.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\components\\MyButton.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\router\\routes.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\http.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\dashboard.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\carousels.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\ErrorPage.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Login.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\router\\homeRoutes.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\assets\\utils.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\ProductSetting.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\system\\Account.vue",["153"],"<template>\r\n    <div class=\"Account\">\r\n        <div class=\"info\">\r\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"formIns\">\r\n                <el-form-item label=\"登录名：\" label-width=\"80px\" prop=\"loginUserName\">\r\n                    <el-input v-model=\"ruleForm.loginUserName\" style=\"width: 32%\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"昵称：\" label-width=\"80px\" prop=\"nickName\">\r\n                    <el-input v-model=\"ruleForm.nickName\" style=\"width: 32%\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <my-button type=\"danger\" @click=\"submitName\">确认修改</my-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"updataPassword\">\r\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"formIns2\">\r\n                <el-form-item label=\"原密码：\" label-width=\"80px\" prop=\"originalPassword\">\r\n                    <el-input v-model=\"ruleForm.originalPassword\" style=\"width: 32%\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"新密码：\" label-width=\"80px\" prop=\"newPassword\">\r\n                    <el-input v-model=\"ruleForm.newPassword\" style=\"width: 32%\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"danger\" @click=\"submitPassword\">确认修改</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n\r\nexport default {\r\n    name: \"Account\",\r\n    data() {\r\n        return {\r\n            tableLoading: false,\r\n            ruleForm: {\r\n                loginUserName: \"\",\r\n                nickName: \"\",\r\n                originalPassword: \"\",\r\n                newPassword: \"\"\r\n            },\r\n            rules: {\r\n                loginUserName: [{ required: true, message: '登录名不能为空', trigger: 'blur' }],\r\n                nickName: [{ required: true, message: '昵称不能为空', trigger: 'blur' }],\r\n                originalPassword: [{ required: true, message: '原密码不能为空', trigger: 'blur' }],\r\n                newPassword: [{ required: true, message: '新密码不能为空', trigger: 'blur' }]\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.init();\r\n    },\r\n    methods: {\r\n        //获取当前登录者信息\r\n        async init() {\r\n            this.tableLoading = true;\r\n            try {\r\n                let { resultCode, data } = await this.$api.system.queryData();\r\n                if (+resultCode === 200) {\r\n                    this.ruleForm.loginUserName = data.loginUserName;\r\n                    this.ruleForm.nickName = data.nickName;\r\n                } else {\r\n                    this.$message.error('获取数据失败！')\r\n                }\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n            this.tableLoading = false;\r\n        },\r\n\r\n        //修改登录名和密码\r\n        async submitName() {\r\n            try {\r\n                await this.$refs.formIns.validate();\r\n                let { resultCode, message } = await this.$api.system.updateName(this.ruleForm.loginUserName, this.ruleForm.nickName);\r\n                if (+resultCode === 200) {\r\n                    this.$message.success('恭喜您，修改成功！');\r\n                    this.init();\r\n                    return;\r\n                }\r\n                this.$message.error(message);\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n        },\r\n\r\n        //修改密码\r\n        async submitPassword() {\r\n            try {\r\n                await this.$refs.formIns2.validate();\r\n                let { resultCode, message } = await this.$api.system.updataPassword(this.ruleForm.newPassword, this.ruleForm.originalPassword);\r\n                if (+resultCode === 200) {\r\n                    this.$message.success('恭喜您，修改成功！');\r\n                    this.init();\r\n                    return;\r\n                }\r\n                this.$message.error(message);\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n</script>\r\n  \r\n<style lang=\"less\" scoped>\r\n.Account {\r\n    .info {\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        padding: 20px;\r\n        margin-bottom: 20px;\r\n        border-radius: 4px;\r\n        border: 1px solid #ebeef5;\r\n        background-color: #fff;\r\n        box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n    }\r\n\r\n    .updataPassword {\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        padding: 20px;\r\n        margin-bottom: 50px;\r\n        border-radius: 4px;\r\n        border: 1px solid #ebeef5;\r\n        background-color: #fff;\r\n        box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n    }\r\n\r\n    .el-button {\r\n        margin-left: 80px;\r\n    }\r\n\r\n    /deep/.el-input__inner {\r\n        border-radius: 4px !important;\r\n    }\r\n\r\n}\r\n</style>","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\GoodsSetting.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\OrderManager.vue",["154","155"],"<template>\r\n  <div class=\"order-manager\">\r\n    <!-- 操控区 -->\r\n    <div class=\"handler-box\">\r\n      <el-input class=\"input\" v-model=\"numValue\" size=\"small\" placeholder=\"请输入订单号\" clearable @change=\"searchNum\">\r\n      </el-input>\r\n\r\n      <el-select class=\"input\" v-model=\"value\" size=\"small\" @change=\"selectChange\">\r\n        <el-option v-for=\"item in orderValue\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">{{ item.label }}\r\n        </el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\" icon=\"el-icon-s-home\" size=\"small\" @click=\"OrderSucc()\">\r\n        配货完成\r\n      </el-button>\r\n      <el-button type=\"primary\" icon=\"el-icon-s-home\" size=\"small\" @click=\"Issue()\">\r\n        出库\r\n      </el-button>\r\n      <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"small\" @click=\"handleUpdate()\">\r\n        关闭订单\r\n      </el-button>\r\n    </div>\r\n\r\n    <!-- 表格区 -->\r\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"orderNo\" label=\"订单号\" min-width=\"16%\"></el-table-column>\r\n      <el-table-column prop=\"totalPrice\" label=\"订单总价\" min-width=\"14%\"></el-table-column>\r\n\r\n      <el-table-column prop=\"orderStatus\" label=\"订单状态\" min-width=\"14%\" :formatter=\"formmatterOrderState\">\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"payStatus\" label=\"支付方式\" min-width=\"14%\" :formatter=\"formmatterState\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" min-width=\"16%\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" min-width=\"25%\">\r\n        <template v-slot=\"{ row }\">\r\n          <el-popconfirm title=\"确定配货完成吗？\" @confirm=\"OrderSucc(row.orderId)\" v-if=\"row.orderStatus === 1 ? true : false\">\r\n            <el-link type=\"primary\" slot=\"reference\">\r\n              配货完成</el-link>\r\n          </el-popconfirm>\r\n          <el-popconfirm title=\"确定出库吗？\" @confirm=\"Issue(row.orderId)\" v-if=\"row.orderStatus === 2 ? true : false\">\r\n            <el-link type=\"primary\" slot=\"reference\">\r\n              出库</el-link>\r\n          </el-popconfirm>\r\n          <el-popconfirm title=\"确定关闭订单吗？\" @confirm=\"handleUpdate(row.orderId)\">\r\n            <el-link type=\"primary\" slot=\"reference\" v-if=\"!([-1, -2, -3, 4].includes(+row.orderStatus))\">关闭订单</el-link>\r\n          </el-popconfirm>\r\n          <el-link type=\"primary\" @click=\"orderInfo(row.orderId)\">订单详情</el-link>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination background layout=\"prev, pager, next\" :hide-on-single-page=\"false\" :page-size=\"pageSize\"\r\n      :total=\"total\" :current-page=\"currentPage\" @current-change=\"changePage\"></el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"classi-fication\",\r\n  data() {\r\n    return {\r\n      //关于表格区域的\r\n      tableData: [],\r\n      tableLoading: false,\r\n      pageSize: 10,\r\n      total: 0,\r\n      currentPage: 1,\r\n      value: 0,\r\n      parentId: 0,\r\n      selection: [],\r\n      categoryId: null,\r\n      // orderStatus: null,\r\n      numValue: null,\r\n      orderValue: [{\r\n        value: null,\r\n        label: '全部'\r\n      }, {\r\n        value: -3,\r\n        label: '商家关闭'\r\n      }, {\r\n        value: -2,\r\n        label: '超时关闭'\r\n      }, {\r\n        value: -1,\r\n        label: '手动关闭'\r\n      }, {\r\n        value: 0,\r\n        label: '待支付'\r\n      }, {\r\n        value: 1,\r\n        label: '已支付'\r\n      }, {\r\n        value: 2,\r\n        label: '配货完成'\r\n      }, {\r\n        value: 3,\r\n        label: '出库成功'\r\n      }, {\r\n        value: 4,\r\n        label: '交易成功'\r\n      }],\r\n      value: null,\r\n    }\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    /* 关于table表格的 */\r\n    //获取数据\r\n    async init(currentPage, pageSize, orderNo, orderStatus) {\r\n      this.tableLoading = true;\r\n      currentPage = this.currentPage;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.queryOrderList(currentPage, pageSize, orderNo, orderStatus);\r\n        if (+resultCode === 200) {\r\n          let { totalCount, list } = data;\r\n          this.total = +totalCount;\r\n          this.tableData = list;\r\n          this.tableLoading = false;\r\n          return;\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n      this.tableData = [];\r\n      this.total = 0;\r\n      this.tableLoading = false;\r\n    },\r\n    //点击分页\r\n    changePage(num) {\r\n      this.currentPage = num;\r\n      console.log();\r\n\r\n      this.init();\r\n    },\r\n    //支付方式状态\r\n    formmatterState(row) {\r\n\r\n      return row.payStatus === 0 ? '未支付' : '微信支付';\r\n    },\r\n    //订单状态  \r\n    formmatterOrderState(row) {\r\n      switch (row.orderStatus) {\r\n        case -3:\r\n          return '商家关闭';\r\n\r\n        case -2:\r\n          return '超时关闭';\r\n        case -1:\r\n          return '手动关闭';\r\n\r\n        case 0:\r\n          return '待支付';\r\n\r\n        case 1:\r\n          return '已支付';\r\n\r\n        case 2:\r\n          return '配货完成';\r\n        case 3:\r\n          return '出库成功';\r\n        case 4:\r\n          return '交易成功';\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    //关闭订单\r\n    async handleUpdate(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单独\r\n        ids.push(id)\r\n      } else {\r\n        //批量\r\n        ids = this.selection.map(item => item.orderId)\r\n      }\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请选择项！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode, message } = await this.$api.model.colseOrder(ids);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('操作成功');\r\n          this.init();\r\n        } else {\r\n          this.$message.error(message);\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //通过订单状态搜索\r\n    selectChange() {\r\n      this.init(this.currentPage, this.pageSize, this.numValue, this.value)\r\n    },\r\n    //通过订单号搜索\r\n    searchNum() {\r\n      this.init(this.currentPage, this.pageSize, this.numValue)\r\n    },\r\n    //出库\r\n    async Issue(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单独\r\n        ids.push(id)\r\n      } else {\r\n        //批量\r\n        ids = this.selection.map(item => item.orderId)\r\n      }\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请选择项！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode, message } = await this.$api.model.checkOut(ids);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('出库成功');\r\n          this.init();\r\n        } else {\r\n          this.$message.error(message);\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //配货完成\r\n    async OrderSucc(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单独\r\n        ids.push(id)\r\n      } else {\r\n        //批量\r\n        ids = this.selection.map(item => item.orderId)\r\n      }\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请选择项！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode, message } = await this.$api.model.OrderSuccess(ids);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('出库成功');\r\n          this.init();\r\n        } else {\r\n          this.$message.error(message);\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //订单详情\r\n    orderInfo(id) {\r\n      this.$router.push({\r\n        path: '/home/order_detail',\r\n        name: '/home/order_detail',\r\n        query: {\r\n          ids: id\r\n        }\r\n      });\r\n    },\r\n    // 选中\r\n    selectionChange(val) {\r\n      this.selection = val;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.order-manager {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 50px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ebeef5;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n  .handler-box {\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-bottom: 1px solid #ebeef5;\r\n\r\n    .input {\r\n      margin-right: 10px;\r\n      width: 208px;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  a {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-pagination {\r\n\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .el-table {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  .el-image {\r\n    display: block;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .el-link {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  /deep/.el-dialog__body {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  /deep/.el-upload {\r\n    display: block;\r\n  }\r\n\r\n  .avatar-uploader-icon,\r\n  .avatar-uploader-img {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    font-size: 24px;\r\n    color: #8c939d;\r\n    border: 1px dashed #d9d9d9;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: auto;\r\n  position: static;\r\n}\r\n\r\n/deep/.el-input__inner {\r\n  border-radius: 4px !important;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n</style>","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\MemberManager.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\GoodsManager.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\ClassiFication.vue",["156"],"<template>\r\n  <div class=\"classi-fication\">\r\n    <!-- 操控区 -->\r\n    <div class=\"handler-box\">\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogVisible = true\">\r\n        新增\r\n      </el-button>\r\n\r\n      <el-popconfirm title=\"确定要删除这些选中的数据吗？\" @confirm=\"handleRemove\">\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"small\" slot=\"reference\">\r\n          批量删除\r\n        </el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <!-- 表格区 -->\r\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"categoryName\" label=\"分类名称\" min-width=\"10%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"categoryRank\" label=\"排序值\" min-width=\"25%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"添加时间\" min-width=\"25%\" :formatter=\"formatterTime\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" min-width=\"30%\">\r\n\r\n        <template v-slot=\"{ row }\">\r\n          <el-link type=\"primary\" @click=\"handleUpdate(row)\">修改</el-link>\r\n          <el-link type=\"primary\" @click=\"nextClassify(row)\">\r\n            下级分类</el-link>\r\n\r\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleRemove(row.categoryId)\">\r\n            <el-link type=\"danger\" slot=\"reference\">删除</el-link>\r\n          </el-popconfirm>\r\n\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页区 -->\r\n    <el-pagination background layout=\"prev, pager, next\" :hide-on-single-page=\"false\" :page-size=\"pageSize\"\r\n      :total=\"total\" :current-page=\"currentPage\" @current-change=\"changePage\"></el-pagination>\r\n\r\n\r\n    <!-- 修改弹框 -->\r\n    <el-dialog :title=\"`${ruleFrom.goodsId ? '修改' : '添加'}商品`\" :visible.sync=\"dialogVisible\" width=\"30%\"\r\n      :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :before-close=\"handleClose\">\r\n\r\n      <el-form label-width=\"100px\" :model=\"ruleFrom\" :rules=\"rules\" ref=\"fromIns\">\r\n        <el-form-item label=\"分类名称\" prop=\"categoryName\">\r\n          <el-input v-model.trim=\"ruleFrom.categoryName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序值\" prop=\"categoryRank\">\r\n          <el-input-number v-model.trim=\"ruleFrom.categoryRank\" controls-position=\"right\" :min=\"0\" :max=\"200\"\r\n            @click=\"move\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"Submit\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"classi-fication\",\r\n  data() {\r\n    return {\r\n      //关于表格区域的\r\n      tableData: [],\r\n      tableLoading: false,\r\n      pageSize: 10,\r\n      total: 0,\r\n      currentPage: 1,\r\n      categoryLevel: 1,\r\n      parentId: 0,\r\n      selection: [],\r\n      categoryId: null,\r\n      updateTime: null,\r\n      //Dialog表单相关的\r\n      dialogVisible: false,\r\n      carouselId: null,\r\n      ruleFrom: {\r\n        categoryName: \"\",\r\n        categoryRank: \"\"\r\n      },\r\n      rules: {\r\n        categoryName: [{ required: true, message: '分类名不能为空', trigger: 'blur' }],\r\n        categoryRank: [{ required: true, message: '排序值不能为空', trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    /* 关于table表格的 */\r\n    //获取数据\r\n    async init(currentPage, pageSize, categoryLevel, parentId) {\r\n      this.tableLoading = true;\r\n      currentPage = this.currentPage;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.queryList(currentPage, pageSize, categoryLevel, parentId);\r\n        if (+resultCode === 200) {\r\n          let { totalCount, list } = data;\r\n          this.total = +totalCount;\r\n          this.tableData = list;\r\n          this.tableLoading = false;\r\n          return;\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n      this.tableData = [];\r\n      this.total = 0;\r\n      this.tableLoading = false;\r\n    },\r\n    //点击分页\r\n    changePage(num) {\r\n      this.currentPage = num;\r\n      console.log();\r\n\r\n      this.init();\r\n    },\r\n    //时间格式化\r\n    formatterTime(row) {\r\n      return _.formatTime(row.createTime, '{1}-{2} {3}:{4}');\r\n    },\r\n    //删除\r\n    async handleRemove(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单一删除\r\n        ids.push(id)\r\n      } else {\r\n        //批量删除\r\n        ids = this.selection.map(item => item.categoryId)\r\n\r\n      }\r\n\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请至少选择一项删除！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode } = await this.$api.model.removeClassify(ids);\r\n        console.log(resultCode);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('恭喜您，删除成功！');\r\n          this.init();\r\n        } else {\r\n          this.$message.error('删除失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //下级分类\r\n    nextClassify(row) {\r\n      if (row.categoryLevel >= 3) {\r\n        this.$message.error('没有下一级！');\r\n        return;\r\n      }\r\n      this.$router.push({\r\n        path: '/home/classification/level2',\r\n        name: '/home/classification/level2',\r\n        query: {\r\n          parentsId: row.categoryId,\r\n          categoryLevels: row.categoryLevel + 1\r\n        }\r\n      })\r\n    },\r\n    //点击修改\r\n    async handleUpdate(row) {\r\n      this.dialogVisible = true;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.classifyInfo(row.categoryId);\r\n        if (+resultCode === 200) {\r\n          this.ruleFrom = data;\r\n          this.categoryId = data.categoryId;\r\n          this.categoryLevel = data.categoryLevel;\r\n          this.parentId = data.parentId;\r\n          this.createTime = data.updateTime;\r\n          return;\r\n        }\r\n        this.$message.error('获取失败！')\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    selectionChange(val) {\r\n      this.selection = val;\r\n    },\r\n    /* 关于Dialog的 */\r\n    //关闭弹窗\r\n    handleClose() {\r\n      this.$refs.fromIns.resetFields();\r\n      this.ruleFrom = {\r\n        categoryName: \"\",\r\n        categoryRank: 0,\r\n\r\n      }\r\n      this.dialogVisible = false;\r\n    },\r\n    //添加\r\n    async Submit() {\r\n      try {\r\n        await this.$refs.fromIns.validate();\r\n        //添加\r\n        let fun = this.$api.model.addClassify,\r\n          data = { ...this.ruleFrom };\r\n\r\n\r\n        //修改\r\n        if (this.categoryId) {\r\n          fun = this.$api.model.updataClassify;\r\n          data.categoryId = this.categoryId;\r\n          data.createTime = this.updateTime;\r\n        }\r\n        data.categoryLevel = this.categoryLevel;\r\n        data.parentId = this.parentId;\r\n\r\n        let { resultCode } = await fun(data)\r\n        if (+resultCode === 200) {\r\n          this.handleClose();\r\n          this.$message.success('恭喜您，操作成功！');\r\n          this.init();\r\n          return;\r\n        } else {\r\n          this.$message.error('操作失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    move() {\r\n      // this.flag = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.classi-fication {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 50px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ebeef5;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n  .handler-box {\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-bottom: 1px solid #ebeef5;\r\n\r\n    .el-button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-pagination {\r\n\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .el-table {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  .el-image {\r\n    display: block;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .el-link {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  /deep/.el-dialog__body {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  /deep/.el-upload {\r\n    display: block;\r\n  }\r\n\r\n  .avatar-uploader-icon,\r\n  .avatar-uploader-img {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    font-size: 24px;\r\n    color: #8c939d;\r\n    border: 1px dashed #d9d9d9;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: auto;\r\n  position: static;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n</style>","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Dashboard\\Introduce.vue",["157"],"<template>\r\n    <div class=\"Introduce\">\r\n        <div class=\"app\">\r\n            <h1>系统简介</h1>\r\n            <div class=\"text\">vue3-admin 是一套企业级后台管理系统，基于 Spring Boot 、Vue 3.0 相关技术栈开发，供各位开发者们体验和学习，一定给你最好的学习体验。</div>\r\n            <img src=\"https://s.yezgea02.com/1616331765416/WechatIMG40038.png\" alt=\"\">\r\n            <h1>开发及部署文档</h1>\r\n            <img src=\"https://s.yezgea02.com/1616938239101/419241616938196_.pic.jpg\" alt=\"\">\r\n            <ul>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">开篇词：通关Vue3.0 企业级项目开发，升职加薪快人一步</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">项目须知与课程约定</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">大势所趋：“前后端分离”开发模式</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Vue3.0简介及开发环境搭建</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">项Vue 3.0 组合 API 入口 Setup </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Vue 3.0 之响应式系统 API</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Vue 3.0 之生命周期钩子函数、提供注入</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Vue 3.0 性能和业务层面上的提升</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Vite 2.0 原理分析及简单插件编写</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\"> Vue-Router 4.x 使用方法及路由原理</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Vue 3.0 实战项目启动篇</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">技术选型之 Spring Boot</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">后端开发环境搭建</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">快速搭建一个 Spring Boot 项目</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Spring Boot 实践之 Web 功能开发</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Spring Boot 实践之文件上传处理</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Spring Boot 实践之整合 MyBatis 操作数据库</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Spring Boot 实践之整合 Lombok</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">Spring Boot 实践之整合 Swagger 生成接口文档</a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">后端 API 项目启动和运行注意事项</a></li>\r\n            </ul>\r\n            <ul>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        接口参数处理和统一响应结果处理\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之用户登录接口开发\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之用户身份认证详解\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之轮播图管理模块接口开发\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之商品分类管理模块接口开发\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之商品管理模块接口开发\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之商品配置管理模块接口开发\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        API 接口开发实战之订单管理模块接口开发\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        成为一名有独立开发能力的前端工程师\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vite 2.0 + Vue 3.0 + Element-plus 搭建管理后台项目\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之管理后台左右栏目布局（Menu 菜单组件）\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之登录鉴权（Form 表单组件）\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之首页大盘数据（Echart 5.x）\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之首页配置 Table\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之分类管理（多级共用 Table）\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之商品管理\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之订单管理（操作多级判断）\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        Vue 3.0 实战之会员管理、账户修改\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        pm2 实现一键部署云端服务器\r\n                    </a></li>\r\n                <li><a href=\"https://juejin.cn/book/6933939264455442444\">\r\n                        常见问题汇总讲解\r\n                    </a></li>\r\n            </ul>\r\n            <h1>技术选型</h1>\r\n            <ul class=\"selectbox\">\r\n                <li>\r\n                    Vue 3.x\r\n                </li>\r\n                <li>\r\n                    Vite 2.x\r\n                </li>\r\n                <li>\r\n                    Vue-Router 4.x\r\n                </li>\r\n                <li>\r\n                    Element-Plus（适配全新 Vue 3.x 的 PC 端组件库）\r\n                </li>\r\n                <li>\r\n                    Echarts 5.0\r\n                </li>\r\n                <li>\r\n                    axios\r\n                </li>\r\n                <li>\r\n                    wangEditor\r\n                </li>\r\n            </ul>\r\n            <h1>联系作者</h1>\r\n            <ul class=\"selectbox\">\r\n                <li class=\"email\">我的邮箱：2449207463@qq.com</li>\r\n                <li class=\"email\">QQ技术交流群：932227898、707779034</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    name: \"Introduce\",\r\n};\r\n</script>\r\n  \r\n<style lang=\"less\" scoped>\r\n.Introduce {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: 20px;\r\n    margin-bottom: 50px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ebeef5;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n    h1 {\r\n        margin: 18px 0;\r\n    }\r\n\r\n    .text {\r\n        line-height: 30px;\r\n        font-size: 16px;\r\n    }\r\n\r\n    img {\r\n        margin: 0 108px;\r\n        width: 70%;\r\n    }\r\n\r\n    ul {\r\n        margin: 16px 0;\r\n        padding-left: 40px;\r\n\r\n        li {\r\n            position: relative;\r\n            color: #409eff;\r\n\r\n            a {\r\n                line-height: 36px;\r\n                color: #409eff;\r\n                cursor: pointer;\r\n                font-size: 16px;\r\n                font-weight: bold;\r\n            }\r\n        }\r\n\r\n        li::before {\r\n            position: absolute;\r\n            top: 15px;\r\n            left: -20px;\r\n            width: 6px;\r\n            height: 6px;\r\n            content: '';\r\n            background-color: #409eff;\r\n            border-radius: 50%;\r\n        }\r\n    }\r\n\r\n    .selectbox {\r\n        margin: 16px 0;\r\n        padding-left: 40px;\r\n\r\n        li {\r\n            font-size: 16px;\r\n            font-weight: bold;\r\n            color: #000;\r\n        }\r\n\r\n        li::before {\r\n            position: absolute;\r\n            top: 10px;\r\n            left: -20px;\r\n            width: 6px;\r\n            height: 6px;\r\n            content: '';\r\n            background-color: #000;\r\n            border-radius: 50%;\r\n        }\r\n\r\n        .email {\r\n            font-weight: normal;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n</style>","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Dashboard\\Add.vue",["158","159"],"<template>\r\n    <div class=\"Add\">\r\n        <el-form ref=\"fromIns\" :rules=\"rules\" :model=\"ruleFrom\" label-width=\"80px\">\r\n            <el-form-item label=\"商品分类\">\r\n                <div class=\"block\">\r\n                    <el-cascader :props=\"props\" v-model=\"tabVal\"></el-cascader>\r\n                </div>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品名称\" prop=\"goodsName\">\r\n                <el-input placeholder=\"请输入商品名称\" v-model.trim=\"ruleFrom.goodsName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品简介\" prop=\"goodsIntro\">\r\n                <el-input type=\"textarea\" placeholder=\"请输入商品简介（100字）\" v-model.trim=\"ruleFrom.goodsIntro\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"originalPrice\">\r\n                <el-input-number controls-position=\"right\" :min=\"0\" v-model=\"num\" placeholder=\"请输入商品价格\"\r\n                    v-model.trim=\"ruleFrom.originalPrice\">\r\n                </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品售卖价\" prop=\"sellingPrice\">\r\n                <el-input-number controls-position=\"right\" placeholder=\"请输入商品售价\" :min=\"0\" v-model=\"num2\"\r\n                    v-model.trim=\"ruleFrom.sellingPrice\">\r\n                </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品库存\" prop=\"stockNum\">\r\n                <el-input-number controls-position=\"right\" :min=\"0\" placeholder=\"请输入商品库存\" v-model=\"num3\"\r\n                    v-model.trim=\"ruleFrom.stockNum\">\r\n                </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品标签\" prop=\"tag\">\r\n                <el-input placeholder=\"请输入商品小标签\" v-model.trim=\"ruleFrom.tag\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"上架状态\" prop=\"goodsSellStatus\">\r\n                <template>\r\n                    <el-radio-group v-model.trim=\"ruleFrom.goodsSellStatus\">\r\n                        <el-radio :label=\"0\">上架</el-radio>\r\n                        <el-radio :label=\"1\">下架</el-radio>\r\n                    </el-radio-group>\r\n                </template>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"商品主图\" prop=\"goodsCoverImg\">\r\n                <el-upload class=\"avatar-uploader\" action=\"\" accept=\".jpg,.jpeg,.png,.gif\" :show-file-list=\"false\"\r\n                    :multiple=\"false\" :http-request=\"uploadImg\">\r\n\r\n                    <img v-if=\"ruleFrom.goodsCoverImg\" :src=\"ruleFrom.goodsCoverImg\" class=\"avatar-uploader-img\"\r\n                        alt=\"\" />\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                </el-upload>\r\n                <el-dialog :visible.sync=\"dialogVisible\">\r\n                    <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\r\n                </el-dialog>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"详情内容\" prop=\"goodsDetailContent\">\r\n                <div class=\"editor-container\">\r\n\r\n                    <vue-editor id=\"editor\" useCustomImageHandler @imageAdded=\"handleImageAdded\"\r\n                        v-model.trim=\"ruleFrom.goodsDetailContent\">\r\n                        <!-- <img v-if=\"file.url\" :src=\"file.url\" class=\"avatar-uploader-img\" alt=\"\" /> -->\r\n                    </vue-editor>\r\n                </div>\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"submit\">立即创建</el-button>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n   \r\n<script>\r\nimport { VueEditor } from \"vue2-editor/dist/vue2-editor.core.js\";\r\n\r\nexport default {\r\n    name: \"Add\",\r\n    data() {\r\n        let that = this;\r\n        return {\r\n            radio: 0,\r\n            dialogImageUrl: '',\r\n            dialogVisible: false,\r\n            disabled: false,\r\n            content: '请输入正文',\r\n            flag: true,\r\n            //计数器\r\n            num: 0,\r\n            num2: 0,\r\n            num3: 0,\r\n            ruleFrom: {\r\n                goodsIntro: \"\",\r\n                goodsName: \"\",\r\n                originalPrice: \"\",\r\n                sellingPrice: \"\",\r\n                stockNum: \"\",\r\n                tag: \"\",\r\n                goodsSellStatus: \"\",\r\n                goodsCoverImg: \"\",\r\n                goodsDetailContent: \"\",\r\n            },\r\n            goodsCategoryId: null,\r\n            goodsId: null,\r\n            tabVal: [],\r\n            rules: {\r\n                goodsName: [{ required: true, message: '请填写商品名称', trigger: 'blur' }],\r\n                originalPrice: [{ required: true, message: '请填写商品价格', trigger: 'blur' }],\r\n                sellingPrice: [{ required: true, message: '请填写商品售价', trigger: 'blur' }],\r\n                stockNum: [{ required: true, message: '请填写商品库存', trigger: 'blur' }],\r\n                goodsCoverImg: [{ required: true, message: '请上传主图', trigger: 'blur' }],\r\n            },\r\n            options: [],\r\n            props: {\r\n                lazy: true,\r\n                async lazyLoad(node, resolve) {\r\n                    const { level } = node;\r\n                    try {\r\n                        let { resultCode, data } = await that.$api.dashboard.queryGoodsClassify(1, 1000, node.level + 1, node.value);\r\n\r\n                        if (+resultCode === 200) {\r\n                            that.options = data.list;\r\n                        } else {\r\n                            that.$message.error('null')\r\n                        }\r\n                    } catch (_) {\r\n                        console.log('错误：', _);\r\n                    }\r\n                    const nodes = that.options.map(item => ({\r\n                        value: item.categoryId,\r\n                        label: item.categoryName,\r\n                        leaf: level >= 2\r\n                    }));\r\n                    // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n                    resolve(nodes);\r\n                }\r\n            },\r\n\r\n        };\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number,\r\n            default: 0,\r\n        }\r\n    },\r\n    async created() {\r\n        let ids = this.$route.query.id\r\n        if (ids) {\r\n            this.init(ids);\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        async init(ids) {\r\n            try {\r\n                let { resultCode, data } = await this.$api.model.queryGoodsInfo(ids);\r\n                if (+resultCode === 200) {\r\n                    let { goods } = data;\r\n                    this.goodsCategoryId = goods.goodsCategoryId;\r\n                    this.goodsId = goods.goodsId;\r\n                    this.ruleFrom = goods;\r\n                    this.tabVal.push(data.firstCategory.categoryId)\r\n                    this.tabVal.push(data.secondCategory.categoryId)\r\n                    this.tabVal.push(data.thirdCategory.categoryId)\r\n                } else {\r\n                    this.$message.error('获取失败！')\r\n                }\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n        },\r\n        /* 上传图片相关的 */\r\n        handleRemove(file) {\r\n            this.dialogImageUrl = '';\r\n        },\r\n        async uploadImg({ file }) {\r\n            try {\r\n\r\n                let { resultCode, data } = await this.$api.upload(file);\r\n                if (+resultCode === 200) {\r\n                    this.ruleFrom.goodsCoverImg = data;\r\n                    return;\r\n                }\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n            this.$message.error('图片上传失败，请稍后再试！');\r\n        },\r\n        handleImageAdded() {\r\n            this.uploadImg();\r\n        },\r\n        async submit() {\r\n            await this.$refs.fromIns.validate();\r\n            try {\r\n                //添加商品\r\n                let fun = await this.$api.dashboard.addGoods;\r\n\r\n                let data = { ...this.ruleFrom },\r\n                    arr = this.tabVal;\r\n\r\n                data.goodsCategoryId = arr[arr.length - 1];\r\n                console.log(data.goodsCategoryId);\r\n                //修改商品\r\n                if (this.goodsId) {\r\n                    fun = await this.$api.dashboard.upGoods;\r\n                    data.goodsCategoryId = this.goodsCategoryId;\r\n                    data.goodsId = this.goodsId;\r\n                }\r\n\r\n                let { resultCode, message } = await fun(data)\r\n                if (+resultCode === 200) {\r\n                    this.$message.success('恭喜您，操作成功！');\r\n                    this.$router.push('/home/goodsmanager');\r\n                    return;\r\n                } else {\r\n                    this.$message.error(message);\r\n                }\r\n\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        VueEditor\r\n    },\r\n\r\n\r\n};\r\n</script> \r\n  \r\n<style lang=\"less\" scoped>\r\n@import \"~vue2-editor/dist/vue2-editor.css\";\r\n/* Import the Quill styles you want */\r\n@import \"~quill/dist/quill.core.css\";\r\n@import \"~quill/dist/quill.bubble.css\";\r\n@import \"~quill/dist/quill.snow.css\";\r\n\r\n.Add {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: 20px;\r\n    margin-bottom: 50px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ebeef5;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n\r\n    :deep(#editor) {\r\n        height: 300px;\r\n    }\r\n\r\n    :deep(.el-form-item__label) {\r\n        width: 82px !important;\r\n    }\r\n\r\n    :deep(.el-form-item__content) {\r\n        margin-left: 82px !important;\r\n    }\r\n\r\n    /deep/input {\r\n        width: 298px;\r\n        height: 38px;\r\n        padding: 0 15px;\r\n    }\r\n\r\n    /deep/.el-textarea {\r\n        width: 298px;\r\n        height: 38px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    /deep/.el-input-number {\r\n        width: 298px;\r\n    }\r\n\r\n    /deep/.el-button {\r\n        margin-left: 80px;\r\n    }\r\n\r\n    .avatar-uploader-icon,\r\n    .avatar-uploader-img {\r\n        display: block;\r\n        box-sizing: border-box;\r\n        width: 120px;\r\n        height: 120px;\r\n        line-height: 120px;\r\n        font-size: 24px;\r\n        color: #8c939d;\r\n        border: 1px dashed #d9d9d9;\r\n        cursor: pointer;\r\n    }\r\n}\r\n</style>","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\BannerSetting.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Dashboard\\ControlPanel.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\Home\\RecommendSetting.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\components\\HomeMenu.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\GoodsSetting.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\system.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\model.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\api\\ProductSetting.js",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\Order_detail.vue",[],"E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\ClassiFication3.vue",["160"],"<template>\r\n  <div class=\"classi-fication\">\r\n    <!-- 操控区 -->\r\n    <div class=\"handler-box\">\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogVisible = true\">\r\n        新增\r\n      </el-button>\r\n\r\n      <el-popconfirm title=\"确定要删除这些选中的数据吗？\" @confirm=\"handleRemove\">\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"small\" slot=\"reference\">\r\n          批量删除\r\n        </el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <!-- 表格区 -->\r\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"categoryName\" label=\"分类名称\" min-width=\"10%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"categoryRank\" label=\"排序值\" min-width=\"25%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"添加时间\" min-width=\"25%\" :formatter=\"formatterTime\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" min-width=\"30%\">\r\n\r\n        <template v-slot=\"{ row }\">\r\n          <el-link type=\"primary\" @click=\"handleUpdate(row)\">修改</el-link>\r\n          <el-link type=\"primary\" @click=\"nextClassify(row)\">下级分类</el-link>\r\n\r\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleRemove(row.categoryId)\">\r\n            <el-link type=\"danger\" slot=\"reference\">删除</el-link>\r\n          </el-popconfirm>\r\n\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页区 -->\r\n    <el-pagination background layout=\"prev, pager, next\" :hide-on-single-page=\"false\" :page-size=\"pageSize\"\r\n      :total=\"total\" :current-page=\"currentPage\" @current-change=\"changePage\"></el-pagination>\r\n\r\n\r\n    <!-- 修改弹框 -->\r\n    <el-dialog :title=\"`${ruleFrom.goodsId ? '修改' : '添加'}商品`\" :visible.sync=\"dialogVisible\" width=\"30%\"\r\n      :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :before-close=\"handleClose\">\r\n\r\n      <el-form label-width=\"100px\" :model=\"ruleFrom\" :rules=\"rules\" ref=\"fromIns\">\r\n        <el-form-item label=\"分类名称\" prop=\"categoryName\">\r\n          <el-input v-model.trim=\"ruleFrom.categoryName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序值\" prop=\"categoryRank\">\r\n          <el-input-number v-model.trim=\"ruleFrom.categoryRank\" controls-position=\"right\" :min=\"0\" :max=\"200\"\r\n            @click=\"move\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"Submit\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"classi-fication\",\r\n  data() {\r\n    return {\r\n      //关于表格区域的\r\n      tableData: [],\r\n      tableLoading: false,\r\n      pageSize: 10,\r\n      total: 0,\r\n      currentPage: 1,\r\n      categoryLevel: 1,\r\n      parentId: 0,\r\n      selection: [],\r\n      categoryId: null,\r\n      updateTime: null,\r\n      //Dialog表单相关的\r\n      dialogVisible: false,\r\n      carouselId: null,\r\n      ruleFrom: {\r\n        categoryName: \"\",\r\n        categoryRank: \"\"\r\n      },\r\n      rules: {\r\n        categoryName: [{ required: true, message: '分类名不能为空', trigger: 'blur' }],\r\n        categoryRank: [{ required: true, message: '排序值不能为空', trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.parentId = this.$route.query.parentsId;\r\n    this.categoryLevel = this.$route.query.categoryLevels;\r\n    this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n  },\r\n  methods: {\r\n    /* 关于table表格的 */\r\n    //获取数据\r\n    async init(currentPage, pageSize, categoryLevel, parentId) {\r\n      this.tableLoading = true;\r\n      currentPage = this.currentPage;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.queryList(currentPage, pageSize, categoryLevel, parentId);\r\n        if (+resultCode === 200) {\r\n          let { totalCount, list } = data;\r\n          this.total = +totalCount;\r\n          this.tableData = list;\r\n          this.tableLoading = false;\r\n          return;\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n      this.tableData = [];\r\n      this.total = 0;\r\n      this.tableLoading = false;\r\n    },\r\n    //点击分页\r\n    changePage(num) {\r\n      this.currentPage = num;\r\n      console.log();\r\n\r\n      this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n    },\r\n    //时间格式化\r\n    formatterTime(row) {\r\n      return _.formatTime(row.createTime, '{1}-{2} {3}:{4}');\r\n    },\r\n    //删除\r\n    async handleRemove(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单一删除\r\n        ids.push(id)\r\n      } else {\r\n        //批量删除\r\n        ids = this.selection.map(item => item.categoryId)\r\n\r\n      }\r\n      console.log(ids);\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请至少选择一项删除！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode } = await this.$api.model.removeClassify(ids);\r\n        console.log(resultCode);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('恭喜您，删除成功！');\r\n          this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n        } else {\r\n          this.$message.error('删除失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //下级分类\r\n    nextClassify(row) {\r\n\r\n      if (row.categoryLevel >= 3) {\r\n        this.$message.error('没有下一级！');\r\n        return;\r\n      }\r\n      this.init(row.currentPage, row.pageSize, row.categoryLevel, row.parentId);\r\n    },\r\n    //点击修改\r\n    async handleUpdate(row) {\r\n      this.dialogVisible = true;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.classifyInfo(row.categoryId);\r\n        if (+resultCode === 200) {\r\n          this.ruleFrom = data;\r\n          this.categoryId = data.categoryId;\r\n          this.categoryLevel = data.categoryLevel;\r\n          this.parentId = data.parentId;\r\n          this.createTime = data.updateTime;\r\n          return;\r\n        }\r\n        this.$message.error('获取失败！')\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    selectionChange(val) {\r\n      this.selection = val;\r\n    },\r\n    /* 关于Dialog的 */\r\n    //关闭弹窗\r\n    handleClose() {\r\n      this.$refs.fromIns.resetFields();\r\n      this.ruleFrom = {\r\n        categoryName: \"\",\r\n        categoryRank: 0,\r\n\r\n      }\r\n      this.dialogVisible = false;\r\n    },\r\n    //添加\r\n    async Submit() {\r\n      try {\r\n        await this.$refs.fromIns.validate();\r\n        //添加\r\n        let fun = this.$api.model.addClassify,\r\n          data = { ...this.ruleFrom };\r\n\r\n\r\n        //修改\r\n        if (this.categoryId) {\r\n          fun = this.$api.model.updataClassify;\r\n          data.categoryId = this.categoryId;\r\n          data.createTime = this.updateTime;\r\n        }\r\n        data.categoryLevel = this.categoryLevel;\r\n        data.parentId = this.parentId;\r\n\r\n        let { resultCode } = await fun(data)\r\n        if (+resultCode === 200) {\r\n          this.handleClose();\r\n          this.$message.success('恭喜您，操作成功！');\r\n          this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n          return;\r\n        } else {\r\n          this.$message.error('操作失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    move() {\r\n      // this.flag = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.classi-fication {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 50px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ebeef5;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n  .handler-box {\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-bottom: 1px solid #ebeef5;\r\n\r\n    .el-button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-pagination {\r\n\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .el-table {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  .el-image {\r\n    display: block;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .el-link {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  /deep/.el-dialog__body {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  /deep/.el-upload {\r\n    display: block;\r\n  }\r\n\r\n  .avatar-uploader-icon,\r\n  .avatar-uploader-img {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    font-size: 24px;\r\n    color: #8c939d;\r\n    border: 1px dashed #d9d9d9;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: auto;\r\n  position: static;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n</style>","E:\\北京珠峰练习\\毕设\\xinfeng-cms\\src\\views\\model\\ClassiFication2.vue",["161"],"<template>\r\n  <div class=\"classi-fication\">\r\n    <!-- 操控区 -->\r\n    <div class=\"handler-box\">\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogVisible = true\">\r\n        新增\r\n      </el-button>\r\n\r\n      <el-popconfirm title=\"确定要删除这些选中的数据吗？\" @confirm=\"handleRemove\">\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"small\" slot=\"reference\">\r\n          批量删除\r\n        </el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <!-- 表格区 -->\r\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"categoryName\" label=\"分类名称\" min-width=\"10%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"categoryRank\" label=\"排序值\" min-width=\"25%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"添加时间\" min-width=\"25%\" :formatter=\"formatterTime\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" min-width=\"30%\">\r\n\r\n        <template v-slot=\"{ row }\">\r\n          <el-link type=\"primary\" @click=\"handleUpdate(row)\">修改</el-link>\r\n          <el-link type=\"primary\" @click=\"nextClassify(row)\">下级分类</el-link>\r\n\r\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleRemove(row.categoryId)\">\r\n            <el-link type=\"danger\" slot=\"reference\">删除</el-link>\r\n          </el-popconfirm>\r\n\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页区 -->\r\n    <el-pagination background layout=\"prev, pager, next\" :hide-on-single-page=\"false\" :page-size=\"pageSize\"\r\n      :total=\"total\" :current-page=\"currentPage\" @current-change=\"changePage\"></el-pagination>\r\n\r\n\r\n    <!-- 修改弹框 -->\r\n    <el-dialog :title=\"`${ruleFrom.goodsId ? '修改' : '添加'}商品`\" :visible.sync=\"dialogVisible\" width=\"30%\"\r\n      :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :before-close=\"handleClose\">\r\n\r\n      <el-form label-width=\"100px\" :model=\"ruleFrom\" :rules=\"rules\" ref=\"fromIns\">\r\n        <el-form-item label=\"分类名称\" prop=\"categoryName\">\r\n          <el-input v-model.trim=\"ruleFrom.categoryName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序值\" prop=\"categoryRank\">\r\n          <el-input-number v-model.trim=\"ruleFrom.categoryRank\" controls-position=\"right\" :min=\"0\" :max=\"200\"\r\n            @click=\"move\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"Submit\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"classi-fication\",\r\n  data() {\r\n    return {\r\n      //关于表格区域的\r\n      tableData: [],\r\n      tableLoading: false,\r\n      pageSize: 10,\r\n      total: 0,\r\n      currentPage: 1,\r\n      categoryLevel: 1,\r\n      parentId: 0,\r\n      selection: [],\r\n      categoryId: null,\r\n      updateTime: null,\r\n      //Dialog表单相关的\r\n      dialogVisible: false,\r\n      carouselId: null,\r\n      ruleFrom: {\r\n        categoryName: \"\",\r\n        categoryRank: \"\"\r\n      },\r\n      rules: {\r\n        categoryName: [{ required: true, message: '分类名不能为空', trigger: 'blur' }],\r\n        categoryRank: [{ required: true, message: '排序值不能为空', trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    parentsId: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    categoryLevels: {\r\n      type: Number,\r\n      default: 1,\r\n    }\r\n  },\r\n  created() {\r\n    this.parentId = this.$route.query.parentsId;\r\n    this.categoryLevel = this.$route.query.categoryLevels;\r\n    this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n  },\r\n  methods: {\r\n    /* 关于table表格的 */\r\n    //获取数据\r\n    async init(currentPage, pageSize, categoryLevel, parentId) {\r\n\r\n      this.tableLoading = true;\r\n      currentPage = this.currentPage;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.queryList(currentPage, pageSize, 2, parentId);\r\n        if (+resultCode === 200) {\r\n          let { totalCount, list } = data;\r\n          this.total = +totalCount;\r\n          this.tableData = list;\r\n          this.tableLoading = false;\r\n          return;\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n      this.tableData = [];\r\n      this.total = 0;\r\n      this.tableLoading = false;\r\n    },\r\n    //点击分页\r\n    changePage(num) {\r\n      this.currentPage = num;\r\n      console.log();\r\n\r\n      this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n    },\r\n    //时间格式化\r\n    formatterTime(row) {\r\n      return _.formatTime(row.createTime, '{1}-{2} {3}:{4}');\r\n    },\r\n    //删除\r\n    async handleRemove(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单一删除\r\n        ids.push(id)\r\n      } else {\r\n        //批量删除\r\n        ids = this.selection.map(item => item.categoryId)\r\n\r\n      }\r\n      console.log(ids);\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请至少选择一项删除！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode } = await this.$api.model.removeClassify(ids);\r\n        console.log(resultCode);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('恭喜您，删除成功！');\r\n          this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n        } else {\r\n          this.$message.error('删除失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //下级分类\r\n    nextClassify(row) {\r\n      if (row.categoryLevel >= 3) {\r\n        this.$message.error('没有下一级！');\r\n        return;\r\n      }\r\n      this.$router.push({\r\n        path: '/home/classification/level3',\r\n        name: '/home/classification/level3',\r\n        query: {\r\n          parentsId: row.categoryId,\r\n          categoryLevels: row.categoryLevel + 1\r\n        }\r\n      })\r\n    },\r\n    //点击修改\r\n    async handleUpdate(row) {\r\n      this.dialogVisible = true;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.classifyInfo(row.categoryId);\r\n        if (+resultCode === 200) {\r\n          this.ruleFrom = data;\r\n          this.categoryId = data.categoryId;\r\n          this.categoryLevel = data.categoryLevel;\r\n          this.parentId = data.parentId;\r\n          this.createTime = data.updateTime;\r\n          return;\r\n        }\r\n        this.$message.error('获取失败！')\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    selectionChange(val) {\r\n      this.selection = val;\r\n    },\r\n    /* 关于Dialog的 */\r\n    //关闭弹窗\r\n    handleClose() {\r\n      this.$refs.fromIns.resetFields();\r\n      this.ruleFrom = {\r\n        categoryName: \"\",\r\n        categoryRank: 0,\r\n\r\n      }\r\n      this.dialogVisible = false;\r\n    },\r\n    //添加\r\n    async Submit() {\r\n      try {\r\n        await this.$refs.fromIns.validate();\r\n        //添加\r\n        let fun = this.$api.model.addClassify,\r\n        data = { ...this.ruleFrom };\r\n\r\n        //修改\r\n        if (this.categoryId) {\r\n          fun = this.$api.model.updataClassify;\r\n          data.categoryId = this.categoryId;\r\n          data.createTime = this.updateTime;\r\n        }\r\n        data.categoryLevel = this.categoryLevel;\r\n        data.parentId = this.parentId;\r\n\r\n        let { resultCode } = await fun(data)\r\n        if (+resultCode === 200) {\r\n          this.handleClose();\r\n          this.$message.success('恭喜您，操作成功！');\r\n          this.init(this.currentPage, this.pageSize, this.categoryLevel, this.parentId);\r\n          return;\r\n        } else {\r\n          this.$message.error('操作失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    move() {\r\n      // this.flag = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.classi-fication {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 50px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ebeef5;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n  .handler-box {\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-bottom: 1px solid #ebeef5;\r\n\r\n    .el-button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-pagination {\r\n\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .el-table {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  .el-image {\r\n    display: block;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .el-link {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  /deep/.el-dialog__body {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  /deep/.el-upload {\r\n    display: block;\r\n  }\r\n\r\n  .avatar-uploader-icon,\r\n  .avatar-uploader-img {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    font-size: 24px;\r\n    color: #8c939d;\r\n    border: 1px dashed #d9d9d9;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: auto;\r\n  position: static;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n</style>",{"ruleId":"162","severity":2,"message":"163","line":35,"column":11,"nodeType":"164","messageId":"165","endLine":35,"endColumn":20},{"ruleId":"166","severity":2,"message":"167","line":103,"column":7,"nodeType":"168","messageId":"165","endLine":103,"endColumn":12},{"ruleId":"169","severity":2,"message":"170","line":103,"column":7,"nodeType":"171","endLine":103,"endColumn":12},{"ruleId":"172","severity":2,"message":"173","line":129,"column":14,"nodeType":"171","messageId":"174","endLine":129,"endColumn":15},{"ruleId":"162","severity":2,"message":"175","line":128,"column":11,"nodeType":"164","messageId":"165","endLine":128,"endColumn":22},{"ruleId":"162","severity":2,"message":"176","line":73,"column":11,"nodeType":"164","messageId":"165","endLine":73,"endColumn":16},{"ruleId":"177","severity":2,"message":"178","line":169,"column":22,"nodeType":"171","messageId":"179","endLine":169,"endColumn":26},{"ruleId":"172","severity":2,"message":"173","line":130,"column":14,"nodeType":"171","messageId":"174","endLine":130,"endColumn":15},{"ruleId":"172","severity":2,"message":"173","line":142,"column":14,"nodeType":"171","messageId":"174","endLine":142,"endColumn":15},"vue/multi-word-component-names","Component name \"Account\" should always be multi-word.","Literal","unexpected","no-dupe-keys","Duplicate key 'value'.","ObjectExpression","vue/no-dupe-keys","Duplicated key 'value'.","Identifier","no-undef","'_' is not defined.","undef","Component name \"Introduce\" should always be multi-word.","Component name \"Add\" should always be multi-word.","no-unused-vars","'file' is defined but never used.","unusedVar"]