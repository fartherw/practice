{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport md5 from \"blueimp-md5\";\nimport _ from \"@/assets/utils\";\nconst sign = \"******\";\nexport default {\n  name: \"xf-login\",\n  data() {\n    const checkAccount = (_, value, callback) => {\n      if (value.length === 0) {\n        return callback(new Error('帐号不能为空哈~'));\n      }\n      let reg1 = /^(?:(?:\\+|00)86)?1\\d{10}$/,\n        reg2 = /^[a-zA-Z0-9_-]{4,16}$/;\n      if (!reg1.test(value) && !reg2.test(value)) {\n        return callback(new Error('帐号格式不符哦~'));\n      }\n      callback();\n    };\n    const checkPassword = (_, value, callback) => {\n      if (value.length === 0) {\n        return callback(new Error('密码不能为空哈~'));\n      }\n      if (value === sign) {\n        //让占位符一定能通过表单校验\n        return callback();\n      }\n      let reg = /^.{6,16}$/;\n      if (!reg.test(value)) {\n        return callback(new Error('密码格式不对哦~'));\n      }\n      callback();\n    };\n    return {\n      ruleFrom: {\n        account: \"\",\n        password: \"\"\n      },\n      rules: {\n        account: [{\n          validator: checkAccount,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: checkPassword,\n          trigger: 'blur'\n        }]\n      },\n      remember: true\n    };\n  },\n  created() {\n    //把记住的帐号密码，放在对应的框中\n    let remdata = _.storage.get('remember');\n    if (remdata) {\n      let {\n        account,\n        password\n      } = remdata;\n      this.ruleFrom.account = account;\n      this.ruleFrom.password = sign;\n      this.passwordMd5Remember = password;\n    }\n  },\n  methods: {\n    async submit() {\n      try {\n        await this.$refs.formIns.validate();\n\n        //表单校验通过，向服务器发送请求\n        let {\n          account,\n          password\n        } = this.ruleFrom;\n\n        //如果是占位符，就用记住的密码，如果不是，就用当前密码加密\n        password = password === sign ? this.passwordMd5Remember : md5(password); //md5加密\n        let {\n          resultCode,\n          data\n        } = await this.$api.adminLogin(account, password);\n        if (+resultCode === 200) {\n          //登录成功  1.存储Token 2.获取登录者信息  3.提示、跳转\n\n          _.storage.set('tk', data);\n          await this.$store.dispatch('setProfileAsync');\n          this.$message.success('恭喜您，登录成功~');\n\n          //存储帐号密码\n          if (this.remember) {\n            _.storage.set('remember', {\n              account,\n              password\n            });\n          } else {\n            _.storage.remove('remember');\n          }\n\n          //跳转的细节\n          let {\n            to\n          } = this.$route.query;\n          to ? this.$router.replace(to) : this.$router.push('/home');\n        } else {\n          //登录失败\n          this.$message.error('登录失败，请重新登录！');\n        }\n      } catch (_) {\n        console.log('错误: ', _);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAiCA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACA;QACA;MACA;MACA;QACAC;MACA;QACA;MACA;MACAC;IAEA;IACA;MACA;QACA;MACA;MACA;QAAA;QACA;MACA;MACA;MACA;QACA;MACA;MACAA;IACA;IACA;MACAC;QACAC;QACAC;MACA;MACAC;QACAF;UAAAG;UAAAC;QAAA;QACAH;UAAAE;UAAAC;QAAA;MACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;MACA;QAAAN;QAAAC;MAAA;MACA;MACA;MACA;IACA;EACA;EACAM;IACA;MACA;QACA;;QAEA;QACA;UAAAP;UAAAC;QAAA;;QAEA;QACAA;QACA;UAAAO;UAAAZ;QAAA;QACA;UACA;;UAEAa;UACA;UAEA;;UAEA;UACA;YACAA;cACAT;cAAAC;YACA;UACA;YACAQ;UACA;;UAEA;UACA;YAAAC;UAAA;UACAA;QAEA;UACA;UACA;QACA;MAEA;QACAC;MACA;IACA;EACA;AACA","names":["name","data","reg2","callback","ruleFrom","account","password","rules","validator","trigger","remember","created","methods","resultCode","_","to","console"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-box\">\r\n    <div class=\"content\">\r\n      <div class=\"header\">\r\n        <img class=\"logo\" src=\"../assets/images/mlogo.png\" alt=\"\" />\r\n        <h2 class=\"title\">新蜂商城</h2>\r\n      </div>\r\n\r\n      <el-form :model=\"ruleFrom\" :rules=\"rules\" ref=\"formIns\">\r\n        <el-form-item label=\"账号\" prop=\"account\">\r\n          <el-input autofocus placeholder=\"请输入手机号/用户名\" v-model.trim=\"ruleFrom.account\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input show-password v-model.trim=\"ruleFrom.password\" @keydown.native.enter=\"submit\"></el-input>\r\n        </el-form-item>\r\n        <p class=\"tip\">\r\n          登录表示您已同意\r\n          <a href=\"javascript:;\">《服务条款》</a>\r\n        </p>\r\n        <el-form-item>\r\n\r\n          <my-button @click=\"submit\">立即登录</my-button>\r\n\r\n        </el-form-item>\r\n        <div class=\"remember\">\r\n          <el-checkbox v-model=\"remember\">记住账号和密码</el-checkbox>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport md5 from \"blueimp-md5\";\r\nimport _ from \"@/assets/utils\"\r\nconst sign = \"******\";\r\n\r\nexport default {\r\n  name: \"xf-login\",\r\n  data() {\r\n    const checkAccount = (_, value, callback) => {\r\n      if (value.length === 0) {\r\n        return callback(new Error('帐号不能为空哈~'));\r\n      }\r\n      let reg1 = /^(?:(?:\\+|00)86)?1\\d{10}$/,\r\n        reg2 = /^[a-zA-Z0-9_-]{4,16}$/;\r\n      if (!reg1.test(value) && !reg2.test(value)) {\r\n        return callback(new Error('帐号格式不符哦~'));\r\n      }\r\n      callback();\r\n\r\n    };\r\n    const checkPassword = (_, value, callback) => {\r\n      if (value.length === 0) {\r\n        return callback(new Error('密码不能为空哈~'));\r\n      }\r\n      if (value === sign) {//让占位符一定能通过表单校验\r\n        return callback();\r\n      }\r\n      let reg = /^.{6,16}$/;\r\n      if (!reg.test(value)) {\r\n        return callback(new Error('密码格式不对哦~'));\r\n      }\r\n      callback();\r\n    };\r\n    return {\r\n      ruleFrom: {\r\n        account: \"\",\r\n        password: \"\"\r\n      },\r\n      rules: {\r\n        account: [{ validator: checkAccount, trigger: 'blur' }],\r\n        password: [{ validator: checkPassword, trigger: 'blur' }]\r\n      },\r\n      remember: true,\r\n    };\r\n  },\r\n  created() {\r\n    //把记住的帐号密码，放在对应的框中\r\n    let remdata = _.storage.get('remember');\r\n    if (remdata) {\r\n      let { account, password } = remdata;\r\n      this.ruleFrom.account = account;\r\n      this.ruleFrom.password = sign;\r\n      this.passwordMd5Remember = password;\r\n    }\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      try {\r\n        await this.$refs.formIns.validate();\r\n\r\n        //表单校验通过，向服务器发送请求\r\n        let { account, password } = this.ruleFrom;\r\n\r\n        //如果是占位符，就用记住的密码，如果不是，就用当前密码加密\r\n        password = password === sign ? this.passwordMd5Remember : md5(password);//md5加密\r\n        let { resultCode, data } = await this.$api.adminLogin(account, password);\r\n        if (+resultCode === 200) {\r\n          //登录成功  1.存储Token 2.获取登录者信息  3.提示、跳转\r\n\r\n          _.storage.set('tk', data);\r\n          await this.$store.dispatch('setProfileAsync');\r\n\r\n          this.$message.success('恭喜您，登录成功~');\r\n\r\n          //存储帐号密码\r\n          if (this.remember) {\r\n            _.storage.set('remember', {\r\n              account, password\r\n            })\r\n          } else {\r\n            _.storage.remove('remember')\r\n          }\r\n\r\n          //跳转的细节\r\n          let { to } = this.$route.query;\r\n          to ? this.$router.replace(to) : this.$router.push('/home');\r\n\r\n        } else {\r\n          //登录失败\r\n          this.$message.error('登录失败，请重新登录！');\r\n        }\r\n\r\n      } catch (_) {\r\n        console.log('错误: ', _);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login-box {\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  .content {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    box-sizing: border-box;\r\n    width: 420px;\r\n    background: #fff;\r\n    border-radius: 5px;\r\n    box-shadow: 0 20px 40px 0 rgba(0, 0, 0, 0.2);\r\n  }\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px 0;\r\n\r\n  .logo {\r\n    margin-right: 20px;\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  .title {\r\n    font-size: 28px;\r\n    color: #1baeae;\r\n    font-weight: 700;\r\n  }\r\n}\r\n\r\n.el-form {\r\n  box-sizing: border-box;\r\n  margin: 0 auto;\r\n  padding-bottom: 40px;\r\n  width: 300px;\r\n\r\n  /deep/.el-form-item__label {\r\n    display: block;\r\n  }\r\n\r\n  .tip {\r\n    line-height: 40px;\r\n    font-size: 14px;\r\n\r\n    a {\r\n      color: #409eff;\r\n    }\r\n  }\r\n\r\n  .el-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}