{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"classi-fication\",\n  data() {\n    return {\n      //关于表格区域的\n      tableData: [],\n      tableLoading: false,\n      pageSize: 10,\n      total: 0,\n      currPage: 1,\n      categoryLevel: 1,\n      parentId: 0,\n      selection: [],\n      categoryId: null,\n      updateTime: null,\n      //Dialog表单相关的\n      dialogVisible: false,\n      carouselId: null,\n      ruleFrom: {\n        categoryName: \"\",\n        categoryRank: \"\"\n      },\n      rules: {\n        categoryName: [{\n          required: true,\n          message: '分类名不能为空',\n          trigger: 'blur'\n        }],\n        categoryRank: [{\n          required: true,\n          message: '排序值不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    /* 关于table表格的 */\n    //获取数据\n    async init(pageNumber, pageSize, categoryLevel, parentId) {\n      this.tableLoading = true;\n      try {\n        let {\n          resultCode,\n          data\n        } = await this.$api.model.queryList(pageNumber, pageSize, categoryLevel, parentId);\n        if (+resultCode === 200) {\n          let {\n            totalCount,\n            list\n          } = data;\n          this.total = +totalCount;\n          this.tableData = list;\n          this.currPage = +currPage;\n          this.this.tableLoading = false;\n          return;\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n      this.tableData = [];\n      this.total = 0;\n      this.tableLoading = false;\n    },\n    //点击分页\n    changePage(num) {\n      this.currPage = num;\n      this.init();\n    },\n    //时间格式化\n    formatterTime(row) {\n      return _.formatTime(row.createTime, '{1}-{2} {3}:{4}');\n    },\n    //删除\n    async handleRemove(id) {\n      let ids = [];\n      if (id) {\n        //单一删除\n        ids.push(id);\n      } else {\n        //批量删除\n        ids = this.selection.map(item => item.categoryId);\n      }\n      console.log(ids);\n      if (ids.length === 0) {\n        this.$message.warning('请至少选择一项删除！');\n        return;\n      }\n      try {\n        let {\n          resultCode\n        } = await this.$api.model.removeClassify(ids);\n        console.log(resultCode);\n        if (+resultCode === 200) {\n          this.$message.success('恭喜您，删除成功！');\n          this.init();\n        } else {\n          this.$message.error('删除失败，请稍后再试！');\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    //下级分类\n    nextClassify(row) {\n      this.parentId = row.categoryId;\n      this.categoryLevel = row.categoryLevel + 1;\n      if (this.categoryLevel >= 4) {\n        this.$message.error('没有下一级！');\n        return;\n      }\n      this.init(this.currPage, this.pageSize, this.categoryLevel, this.parentId);\n    },\n    //点击修改\n    async handleUpdate(row) {\n      this.dialogVisible = true;\n      try {\n        let {\n          resultCode,\n          data\n        } = await this.$api.model.classifyInfo(row.categoryId);\n        if (+resultCode === 200) {\n          this.ruleFrom = data;\n          this.categoryId = data.categoryId;\n          this.categoryLevel = data.categoryLevel;\n          this.parentId = data.parentId;\n          this.createTime = data.updateTime;\n          return;\n        }\n        this.$message.error('获取失败！');\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    selectionChange(val) {\n      this.selection = val;\n    },\n    /* 关于Dialog的 */\n    //关闭弹窗\n    handleClose() {\n      this.$refs.fromIns.resetFields();\n      this.ruleFrom = {\n        categoryName: \"\",\n        categoryRank: 0\n      };\n      this.dialogVisible = false;\n    },\n    //添加\n    async Submit() {\n      try {\n        await this.$refs.fromIns.validate();\n        //添加\n        let fun = this.$api.model.addClassify,\n          data = {\n            ...this.ruleFrom\n          };\n\n        //修改\n        if (this.categoryId) {\n          fun = this.$api.model.updataClassify;\n          data.categoryId = this.categoryId;\n          data.createTime = this.updateTime;\n        }\n        data.categoryLevel = this.categoryLevel;\n        data.parentId = this.parentId;\n        let {\n          resultCode\n        } = await fun(data);\n        if (+resultCode === 200) {\n          this.handleClose();\n          this.$message.success('恭喜您，操作成功！');\n          this.init();\n          return;\n        } else {\n          this.$message.error('操作失败，请稍后再试！');\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    move() {\n      // this.flag = true;\n    }\n  }\n};","map":{"version":3,"mappings":";AAiEA;EACAA;EACAC;IACA;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;QACAF;UAAAG;UAAAC;UAAAC;QAAA;QACAJ;UAAAE;UAAAC;UAAAC;QAAA;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACA;IACA;MACA;MACA;QACA;UAAAC;UAAAtB;QAAA;QACA;UACA;YAAAuB;YAAAC;UAAA;UACA;UACA;UACA;UACA,KACAC;UACA;QACA;MACA;QACAC;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACAC;MACA;QACA;QACAA;MAEA;MACAH;MACA;QACA;QACA;MACA;MACA;QACA;UAAAJ;QAAA;QACAI;QACA;UACA;UACA;QACA;UACA;QACA;MACA;QACAA;MACA;IACA;IACA;IACAI;MACA;MACA;MACA;QACA;QACA;MACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;UAAAR;UAAAtB;QAAA;QACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;QACA;MACA;QACA0B;MACA;IACA;IAEAK;MACA;IACA;IACA;IACA;IACAC;MACA;MACA;QACAlB;QACAC;MAEA;MACA;IACA;IACA;IACA;MACA;QACA;QACA;QACA;UACAf;YAAA;UAAA;;QAGA;QACA;UACAiC;UACAjC;UACAA;QACA;QACAA;QACAA;QAEA;UAAAsB;QAAA;QACA;UACA;UACA;UACA;UACA;QACA;UACA;QACA;MACA;QACAI;MACA;IACA;IAEAQ;MACA;IACA;EACA;AACA","names":["name","data","tableData","tableLoading","pageSize","total","currPage","categoryLevel","parentId","selection","categoryId","updateTime","dialogVisible","carouselId","ruleFrom","categoryName","categoryRank","rules","required","message","trigger","created","methods","resultCode","totalCount","list","this","console","changePage","formatterTime","ids","nextClassify","selectionChange","handleClose","fun","move"],"sourceRoot":"src/views/model","sources":["ClassiFication.vue"],"sourcesContent":["<template>\r\n  <div class=\"classi-fication\">\r\n    <!-- 操控区 -->\r\n    <div class=\"handler-box\">\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogVisible = true\">\r\n        新增\r\n      </el-button>\r\n\r\n      <el-popconfirm title=\"确定要删除这些选中的数据吗？\" @confirm=\"handleRemove\">\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"small\" slot=\"reference\">\r\n          批量删除\r\n        </el-button>\r\n      </el-popconfirm>\r\n    </div>\r\n\r\n    <!-- 表格区 -->\r\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"categoryName\" label=\"分类名称\" min-width=\"10%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"categoryRank\" label=\"排序值\" min-width=\"25%\" align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"添加时间\" min-width=\"25%\" :formatter=\"formatterTime\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" min-width=\"30%\">\r\n\r\n        <template v-slot=\"{ row }\">\r\n          <el-link type=\"primary\" @click=\"handleUpdate(row)\">修改</el-link>\r\n          <el-link type=\"primary\" @click=\"nextClassify(row)\">下级分类</el-link>\r\n\r\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleRemove(row.categoryId)\">\r\n            <el-link type=\"danger\" slot=\"reference\">删除</el-link>\r\n          </el-popconfirm>\r\n\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页区 -->\r\n    <el-pagination background layout=\"prev, pager, next\" :hide-on-single-page=\"true\" :page-size=\"pageSize\"\r\n      :total=\"total\" :current-page=\"currPage\" @current-change=\"changePage\"></el-pagination>\r\n\r\n\r\n    <!-- 修改弹框 -->\r\n    <el-dialog :title=\"`${ruleFrom.goodsId ? '修改' : '添加'}商品`\" :visible.sync=\"dialogVisible\" width=\"30%\"\r\n      :close-on-click-modal=\"false\" :close-on-press-escape=\"false\" :before-close=\"handleClose\">\r\n\r\n      <el-form label-width=\"100px\" :model=\"ruleFrom\" :rules=\"rules\" ref=\"fromIns\">\r\n        <el-form-item label=\"分类名称\" prop=\"categoryName\">\r\n          <el-input v-model.trim=\"ruleFrom.categoryName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序值\" prop=\"categoryRank\">\r\n          <el-input-number v-model.trim=\"ruleFrom.categoryRank\" controls-position=\"right\" :min=\"0\" :max=\"200\"\r\n            @click=\"move\">\r\n          </el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"Submit\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"classi-fication\",\r\n  data() {\r\n    return {\r\n      //关于表格区域的\r\n      tableData: [],\r\n      tableLoading: false,\r\n      pageSize: 10,\r\n      total: 0,\r\n      currPage: 1,\r\n      categoryLevel: 1,\r\n      parentId: 0,\r\n      selection: [],\r\n      categoryId: null,\r\n      updateTime: null,\r\n      //Dialog表单相关的\r\n      dialogVisible: false,\r\n      carouselId: null,\r\n      ruleFrom: {\r\n        categoryName: \"\",\r\n        categoryRank: \"\"\r\n      },\r\n      rules: {\r\n        categoryName: [{ required: true, message: '分类名不能为空', trigger: 'blur' }],\r\n        categoryRank: [{ required: true, message: '排序值不能为空', trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    /* 关于table表格的 */\r\n    //获取数据\r\n    async init(pageNumber, pageSize, categoryLevel, parentId) {\r\n      this.tableLoading = true;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.queryList(pageNumber, pageSize, categoryLevel, parentId);\r\n        if (+resultCode === 200) {\r\n          let { totalCount, list } = data;\r\n          this.total = +totalCount;\r\n          this.tableData = list;\r\n          this.currPage=+currPage;\r\n          this.\r\n          this.tableLoading = false;\r\n          return;\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n      this.tableData = [];\r\n      this.total = 0;\r\n      this.tableLoading = false;\r\n    },\r\n    //点击分页\r\n    changePage(num) {\r\n      this.currPage = num;\r\n      this.init();\r\n    },\r\n    //时间格式化\r\n    formatterTime(row) {\r\n      return _.formatTime(row.createTime, '{1}-{2} {3}:{4}');\r\n    },\r\n    //删除\r\n    async handleRemove(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单一删除\r\n        ids.push(id)\r\n      } else {\r\n        //批量删除\r\n        ids = this.selection.map(item => item.categoryId)\r\n\r\n      }\r\n      console.log(ids);\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请至少选择一项删除！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode } = await this.$api.model.removeClassify(ids);\r\n        console.log(resultCode);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('恭喜您，删除成功！');\r\n          this.init();\r\n        } else {\r\n          this.$message.error('删除失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //下级分类\r\n    nextClassify(row) {\r\n      this.parentId = row.categoryId;\r\n      this.categoryLevel = row.categoryLevel + 1;\r\n      if (this.categoryLevel >= 4) {\r\n        this.$message.error('没有下一级！');\r\n        return;\r\n      }\r\n      this.init(this.currPage, this.pageSize, this.categoryLevel, this.parentId);\r\n    },\r\n    //点击修改\r\n    async handleUpdate(row) {\r\n      this.dialogVisible = true;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.classifyInfo(row.categoryId);\r\n        if (+resultCode === 200) {\r\n          this.ruleFrom = data;\r\n          this.categoryId = data.categoryId;\r\n          this.categoryLevel = data.categoryLevel;\r\n          this.parentId = data.parentId;\r\n          this.createTime = data.updateTime;\r\n          return;\r\n        }\r\n        this.$message.error('获取失败！')\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    selectionChange(val) {\r\n      this.selection = val;\r\n    },\r\n    /* 关于Dialog的 */\r\n    //关闭弹窗\r\n    handleClose() {\r\n      this.$refs.fromIns.resetFields();\r\n      this.ruleFrom = {\r\n        categoryName: \"\",\r\n        categoryRank: 0,\r\n\r\n      }\r\n      this.dialogVisible = false;\r\n    },\r\n    //添加\r\n    async Submit() {\r\n      try {\r\n        await this.$refs.fromIns.validate();\r\n        //添加\r\n        let fun = this.$api.model.addClassify,\r\n          data = { ...this.ruleFrom };\r\n\r\n\r\n        //修改\r\n        if (this.categoryId) {\r\n          fun = this.$api.model.updataClassify;\r\n          data.categoryId = this.categoryId;\r\n          data.createTime = this.updateTime;\r\n        }\r\n        data.categoryLevel = this.categoryLevel;\r\n        data.parentId = this.parentId;\r\n\r\n        let { resultCode } = await fun(data)\r\n        if (+resultCode === 200) {\r\n          this.handleClose();\r\n          this.$message.success('恭喜您，操作成功！');\r\n          this.init();\r\n          return;\r\n        } else {\r\n          this.$message.error('操作失败，请稍后再试！');\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    move() {\r\n      // this.flag = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.classi-fication {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 50px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ebeef5;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n  .handler-box {\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-bottom: 1px solid #ebeef5;\r\n\r\n    .el-button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-pagination {\r\n\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .el-table {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  .el-image {\r\n    display: block;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .el-link {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  /deep/.el-dialog__body {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  /deep/.el-upload {\r\n    display: block;\r\n  }\r\n\r\n  .avatar-uploader-icon,\r\n  .avatar-uploader-img {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    font-size: 24px;\r\n    color: #8c939d;\r\n    border: 1px dashed #d9d9d9;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: auto;\r\n  position: static;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}