{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"classi-fication\",\n  data() {\n    return {\n      //关于表格区域的\n      tableData: [],\n      tableLoading: false,\n      pageSize: 10,\n      total: 0,\n      currentPage: 1,\n      value: 0,\n      parentId: 0,\n      selection: [],\n      categoryId: null,\n      // orderStatus: null,\n      numValue: null,\n      orderValue: [{\n        value: null,\n        label: '全部'\n      }, {\n        value: -3,\n        label: '商家关闭'\n      }, {\n        value: -2,\n        label: '超时关闭'\n      }, {\n        value: -1,\n        label: '手动关闭'\n      }, {\n        value: 0,\n        label: '待支付'\n      }, {\n        value: 1,\n        label: '已支付'\n      }, {\n        value: 2,\n        label: '配货完成'\n      }, {\n        value: 3,\n        label: '出库成功'\n      }, {\n        value: 4,\n        label: '交易成功'\n      }],\n      value: null\n    };\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    /* 关于table表格的 */\n    //获取数据\n    async init(currentPage, pageSize, orderNo, orderStatus) {\n      this.tableLoading = true;\n      currentPage = this.currentPage;\n      try {\n        let {\n          resultCode,\n          data\n        } = await this.$api.model.queryOrderList(currentPage, pageSize, orderNo, orderStatus);\n        if (+resultCode === 200) {\n          let {\n            totalCount,\n            list\n          } = data;\n          this.total = +totalCount;\n          this.tableData = list;\n          this.tableLoading = false;\n          return;\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n      this.tableData = [];\n      this.total = 0;\n      this.tableLoading = false;\n    },\n    //点击分页\n    changePage(num) {\n      this.currentPage = num;\n      console.log();\n      this.init();\n    },\n    //支付方式状态\n    formmatterState(row) {\n      return row.payStatus === 0 ? '未支付' : '微信支付';\n    },\n    //订单状态  \n    formmatterOrderState(row) {\n      switch (row.orderStatus) {\n        case -3:\n          return '商家关闭';\n        case -2:\n          return '超时关闭';\n        case -1:\n          return '手动关闭';\n        case 0:\n          return '待支付';\n        case 1:\n          return '已支付';\n        case 2:\n          return '配货完成';\n        case 3:\n          return '出库成功';\n        case 4:\n          return '交易成功';\n        default:\n          break;\n      }\n    },\n    //关闭订单\n    async handleUpdate(id) {\n      let ids = [];\n      if (id) {\n        //单独\n        ids.push(id);\n      } else {\n        //批量\n        ids = this.selection.map(item => item.orderId);\n      }\n      if (ids.length === 0) {\n        this.$message.warning('请选择项！');\n        return;\n      }\n      try {\n        let {\n          resultCode,\n          message\n        } = await this.$api.model.colseOrder(ids);\n        if (+resultCode === 200) {\n          this.$message.success('操作成功');\n          this.init();\n        } else {\n          this.$message.error(message);\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    //通过订单状态搜索\n    selectChange() {\n      this.init(this.currentPage, this.pageSize, this.numValue, this.value);\n    },\n    //通过订单号搜索\n    searchNum() {\n      this.init(this.currentPage, this.pageSize, this.numValue);\n    },\n    //出库\n    async Issue(id) {\n      let ids = [];\n      if (id) {\n        //单独\n        ids.push(id);\n      } else {\n        //批量\n        ids = this.selection.map(item => item.orderId);\n      }\n      if (ids.length === 0) {\n        this.$message.warning('请选择项！');\n        return;\n      }\n      try {\n        let {\n          resultCode,\n          message\n        } = await this.$api.model.checkOut(ids);\n        if (+resultCode === 200) {\n          this.$message.success('出库成功');\n          this.init();\n        } else {\n          this.$message.error(message);\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    //配货完成\n    async OrderSucc(id) {\n      let ids = [];\n      if (id) {\n        //单独\n        ids.push(id);\n      } else {\n        //批量\n        ids = this.selection.map(item => item.orderId);\n      }\n      if (ids.length === 0) {\n        this.$message.warning('请选择项！');\n        return;\n      }\n      try {\n        let {\n          resultCode,\n          message\n        } = await this.$api.model.OrderSuccess(ids);\n        if (+resultCode === 200) {\n          this.$message.success('出库成功');\n          this.init();\n        } else {\n          this.$message.error(message);\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    // 选中\n    selectionChange(val) {\n      this.selection = val;\n    }\n  }\n};","map":{"version":3,"mappings":";AA8DA;EACAA;EACAC;IACA;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;MACAC;MACAC;QACAL;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;QACAN;QACAM;MACA;MACAN;IACA;EACA;EACAO;IACA;EACA;EACAC;IACA;IACA;IACA;MACA;MACAT;MACA;QACA;UAAAU;UAAAf;QAAA;QACA;UACA;YAAAgB;YAAAC;UAAA;UACA;UACA;UACA;UACA;QACA;MACA;QACAC;MACA;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACAD;MAEA;IACA;IACA;IACAE;MAEA;IACA;IACA;IACAC;MACA;QACA;UACA;QAEA;UACA;QACA;UACA;QAEA;UACA;QAEA;UACA;QAEA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IACA;IACA;MACA;MACA;QACA;QACAC;MACA;QACA;QACAA;MACA;MACA;QACA;QACA;MACA;MACA;QACA;UAAAP;UAAAQ;QAAA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;QACAL;MACA;IACA;IACA;IACAM;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;QACA;QACAH;MACA;QACA;QACAA;MACA;MACA;QACA;QACA;MACA;MACA;QACA;UAAAP;UAAAQ;QAAA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;QACAL;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;QACAI;MACA;QACA;QACAA;MACA;MACA;QACA;QACA;MACA;MACA;QACA;UAAAP;UAAAQ;QAAA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;QACAL;MACA;IACA;IAEA;IACAQ;MACA;IACA;EACA;AACA","names":["name","data","tableData","tableLoading","pageSize","total","currentPage","value","parentId","selection","categoryId","numValue","orderValue","label","created","methods","resultCode","totalCount","list","console","changePage","formmatterState","formmatterOrderState","ids","message","selectChange","searchNum","selectionChange"],"sourceRoot":"src/views/model","sources":["OrderManager.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-manager\">\r\n    <!-- 操控区 -->\r\n    <div class=\"handler-box\">\r\n      <el-input class=\"input\" v-model=\"numValue\" size=\"small\" placeholder=\"请输入订单号\" clearable @change=\"searchNum\">\r\n      </el-input>\r\n\r\n      <el-select class=\"input\" v-model=\"value\" size=\"small\" @change=\"selectChange\">\r\n        <el-option v-for=\"item in orderValue\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">{{ item.label }}\r\n        </el-option>\r\n      </el-select>\r\n      <el-button type=\"primary\" icon=\"el-icon-s-home\" size=\"small\" @click=\"OrderSucc()\">\r\n        配货完成\r\n      </el-button>\r\n      <el-button type=\"primary\" icon=\"el-icon-s-home\" size=\"small\" @click=\"Issue()\">\r\n        出库\r\n      </el-button>\r\n      <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"small\" @click=\"handleUpdate()\">\r\n        关闭订单\r\n      </el-button>\r\n    </div>\r\n\r\n    <!-- 表格区 -->\r\n    <el-table :data=\"tableData\" stripe style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n      <el-table-column type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"orderNo\" label=\"订单号\" min-width=\"16%\"></el-table-column>\r\n      <el-table-column prop=\"totalPrice\" label=\"订单总价\" min-width=\"14%\"></el-table-column>\r\n\r\n      <el-table-column prop=\"orderStatus\" label=\"订单状态\" min-width=\"14%\" :formatter=\"formmatterOrderState\">\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"payStatus\" label=\"支付方式\" min-width=\"14%\" :formatter=\"formmatterState\"></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" min-width=\"16%\"></el-table-column>\r\n      <el-table-column prop=\"address\" label=\"操作\" min-width=\"25%\">\r\n        <template v-slot=\"{ row }\">\r\n          <el-popconfirm title=\"确定配货完成吗？\" @confirm=\"OrderSucc(row.orderId)\" v-if=\"row.orderStatus === 2 ? true : false\">\r\n            <el-link type=\"primary\" slot=\"reference\">\r\n              配货完成</el-link>\r\n          </el-popconfirm>\r\n          <el-popconfirm title=\"确定出库吗？\" @confirm=\"Issue(row.orderId)\" v-if=\"row.orderStatus === 2 ? true : false\">\r\n            <el-link type=\"primary\" slot=\"reference\">\r\n              出库</el-link>\r\n          </el-popconfirm>\r\n          <el-popconfirm title=\"确定关闭订单吗？\" @confirm=\"handleUpdate(row.orderId)\">\r\n            <el-link type=\"primary\" slot=\"reference\" v-if=\"!([-1, -2, -3, 4].includes(+row.orderStatus))\">关闭订单</el-link>\r\n          </el-popconfirm>\r\n          <el-link type=\"primary\">订单详情</el-link>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- \r\n  row.orderStatus=1  配货完成   2 出库 \r\n -->\r\n    <!-- 分页区 -->\r\n    <el-pagination background layout=\"prev, pager, next\" :hide-on-single-page=\"false\" :page-size=\"pageSize\"\r\n      :total=\"total\" :current-page=\"currentPage\" @current-change=\"changePage\"></el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"classi-fication\",\r\n  data() {\r\n    return {\r\n      //关于表格区域的\r\n      tableData: [],\r\n      tableLoading: false,\r\n      pageSize: 10,\r\n      total: 0,\r\n      currentPage: 1,\r\n      value: 0,\r\n      parentId: 0,\r\n      selection: [],\r\n      categoryId: null,\r\n      // orderStatus: null,\r\n      numValue: null,\r\n      orderValue: [{\r\n        value: null,\r\n        label: '全部'\r\n      }, {\r\n        value: -3,\r\n        label: '商家关闭'\r\n      }, {\r\n        value: -2,\r\n        label: '超时关闭'\r\n      }, {\r\n        value: -1,\r\n        label: '手动关闭'\r\n      }, {\r\n        value: 0,\r\n        label: '待支付'\r\n      }, {\r\n        value: 1,\r\n        label: '已支付'\r\n      }, {\r\n        value: 2,\r\n        label: '配货完成'\r\n      }, {\r\n        value: 3,\r\n        label: '出库成功'\r\n      }, {\r\n        value: 4,\r\n        label: '交易成功'\r\n      }],\r\n      value: null,\r\n    }\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    /* 关于table表格的 */\r\n    //获取数据\r\n    async init(currentPage, pageSize, orderNo, orderStatus) {\r\n      this.tableLoading = true;\r\n      currentPage = this.currentPage;\r\n      try {\r\n        let { resultCode, data } = await this.$api.model.queryOrderList(currentPage, pageSize, orderNo, orderStatus);\r\n        if (+resultCode === 200) {\r\n          let { totalCount, list } = data;\r\n          this.total = +totalCount;\r\n          this.tableData = list;\r\n          this.tableLoading = false;\r\n          return;\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n      this.tableData = [];\r\n      this.total = 0;\r\n      this.tableLoading = false;\r\n    },\r\n    //点击分页\r\n    changePage(num) {\r\n      this.currentPage = num;\r\n      console.log();\r\n\r\n      this.init();\r\n    },\r\n    //支付方式状态\r\n    formmatterState(row) {\r\n\r\n      return row.payStatus === 0 ? '未支付' : '微信支付';\r\n    },\r\n    //订单状态  \r\n    formmatterOrderState(row) {\r\n      switch (row.orderStatus) {\r\n        case -3:\r\n          return '商家关闭';\r\n\r\n        case -2:\r\n          return '超时关闭';\r\n        case -1:\r\n          return '手动关闭';\r\n\r\n        case 0:\r\n          return '待支付';\r\n\r\n        case 1:\r\n          return '已支付';\r\n\r\n        case 2:\r\n          return '配货完成';\r\n        case 3:\r\n          return '出库成功';\r\n        case 4:\r\n          return '交易成功';\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    //关闭订单\r\n    async handleUpdate(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单独\r\n        ids.push(id)\r\n      } else {\r\n        //批量\r\n        ids = this.selection.map(item => item.orderId)\r\n      }\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请选择项！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode, message } = await this.$api.model.colseOrder(ids);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('操作成功');\r\n          this.init();\r\n        } else {\r\n          this.$message.error(message);\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n    //通过订单状态搜索\r\n    selectChange() {\r\n      this.init(this.currentPage, this.pageSize, this.numValue, this.value)\r\n    },\r\n    //通过订单号搜索\r\n    searchNum() {\r\n      this.init(this.currentPage, this.pageSize, this.numValue)\r\n    },\r\n    //出库\r\n    async Issue(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单独\r\n        ids.push(id)\r\n      } else {\r\n        //批量\r\n        ids = this.selection.map(item => item.orderId)\r\n      }\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请选择项！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode, message } = await this.$api.model.checkOut(ids);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('出库成功');\r\n          this.init();\r\n        } else {\r\n          this.$message.error(message);\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    //配货完成\r\n    async OrderSucc(id) {\r\n      let ids = [];\r\n      if (id) {\r\n        //单独\r\n        ids.push(id)\r\n      } else {\r\n        //批量\r\n        ids = this.selection.map(item => item.orderId)\r\n      }\r\n      if (ids.length === 0) {\r\n        this.$message.warning('请选择项！');\r\n        return;\r\n      }\r\n      try {\r\n        let { resultCode, message } = await this.$api.model.OrderSuccess(ids);\r\n        if (+resultCode === 200) {\r\n          this.$message.success('出库成功');\r\n          this.init();\r\n        } else {\r\n          this.$message.error(message);\r\n        }\r\n      } catch (_) {\r\n        console.log('错误：', _);\r\n      }\r\n    },\r\n\r\n    // 选中\r\n    selectionChange(val) {\r\n      this.selection = val;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.order-manager {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  padding-bottom: 20px;\r\n  margin-bottom: 50px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ebeef5;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n  .handler-box {\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-bottom: 1px solid #ebeef5;\r\n\r\n    .input {\r\n      margin-right: 10px;\r\n      width: 208px;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  a {\r\n    color: #409EFF;\r\n  }\r\n\r\n  .el-pagination {\r\n\r\n    z-index: 999;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    margin-top: 20px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .el-table {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n  }\r\n\r\n  .el-image {\r\n    display: block;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .el-link {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  /deep/.el-dialog__body {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  /deep/.el-upload {\r\n    display: block;\r\n  }\r\n\r\n  .avatar-uploader-icon,\r\n  .avatar-uploader-img {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 120px;\r\n    height: 120px;\r\n    line-height: 120px;\r\n    font-size: 24px;\r\n    color: #8c939d;\r\n    border: 1px dashed #d9d9d9;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: auto;\r\n  position: static;\r\n}\r\n\r\n/deep/.el-input__inner {\r\n  border-radius: 4px !important;\r\n}\r\n\r\n:deep(.el-input-number) {\r\n  width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}