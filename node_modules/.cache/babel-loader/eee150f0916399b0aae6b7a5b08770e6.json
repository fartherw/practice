{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { VueEditor } from \"vue2-editor/dist/vue2-editor.core.js\";\nexport default {\n  name: \"Add\",\n  data() {\n    let that = this;\n    return {\n      radio: 0,\n      dialogImageUrl: '',\n      dialogVisible: false,\n      disabled: false,\n      content: '请输入正文',\n      flag: true,\n      //计数器\n      num: 0,\n      num2: 0,\n      num3: 0,\n      ruleFrom: {\n        goodsIntro: \"\",\n        goodsName: \"\",\n        originalPrice: \"\",\n        sellingPrice: \"\",\n        stockNum: \"\",\n        tag: \"\",\n        goodsSellStatus: \"\",\n        goodsCoverImg: \"\",\n        goodsDetailContent: \"\"\n      },\n      goodsCategoryId: null,\n      goodsId: null,\n      tabVal: [],\n      rules: {\n        goodsName: [{\n          required: true,\n          message: '请填写商品名称',\n          trigger: 'blur'\n        }],\n        originalPrice: [{\n          required: true,\n          message: '请填写商品价格',\n          trigger: 'blur'\n        }],\n        sellingPrice: [{\n          required: true,\n          message: '请填写商品售价',\n          trigger: 'blur'\n        }],\n        stockNum: [{\n          required: true,\n          message: '请填写商品库存',\n          trigger: 'blur'\n        }],\n        goodsCoverImg: [{\n          required: true,\n          message: '请上传主图',\n          trigger: 'blur'\n        }]\n      },\n      options: [],\n      props: {\n        lazy: true,\n        async lazyLoad(node, resolve) {\n          const {\n            level\n          } = node;\n          try {\n            let {\n              resultCode,\n              data\n            } = await that.$api.dashboard.queryGoodsClassify(1, 1000, node.level + 1, node.value);\n            if (+resultCode === 200) {\n              that.options = data.list;\n            } else {\n              that.$message.error('null');\n            }\n          } catch (_) {\n            console.log('错误：', _);\n          }\n          const nodes = that.options.map(item => ({\n            value: item.categoryId,\n            label: item.categoryName,\n            leaf: level >= 2\n          }));\n          // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          resolve(nodes);\n        }\n      }\n    };\n  },\n  props: {\n    id: {\n      type: Number,\n      default: 0\n    }\n  },\n  async created() {\n    let ids = this.$route.query.id;\n    if (ids) {\n      this.init(ids);\n    }\n  },\n  methods: {\n    async init(ids) {\n      try {\n        let {\n          resultCode,\n          data\n        } = await this.$api.model.queryGoodsInfo(ids);\n        if (+resultCode === 200) {\n          let {\n            goods\n          } = data;\n          this.goodsCategoryId = goods.goodsCategoryId;\n          this.goodsId = goods.goodsId;\n          this.ruleFrom = goods;\n          this.tabVal.push(data.firstCategory.categoryId);\n          this.tabVal.push(data.secondCategory.categoryId);\n          this.tabVal.push(data.thirdCategory.categoryId);\n        } else {\n          this.$message.error('获取失败！');\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    },\n    /* 上传图片相关的 */\n    handleRemove(file) {\n      this.dialogImageUrl = '';\n    },\n    async uploadImg({\n      file\n    }) {\n      try {\n        let {\n          resultCode,\n          data\n        } = await this.$api.upload(file);\n        if (+resultCode === 200) {\n          this.ruleFrom.goodsCoverImg = data;\n          return;\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n      this.$message.error('图片上传失败，请稍后再试！');\n    },\n    handlePictureCardPreview(file) {\n      this.flag = false;\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handleDownload(file) {\n      // console.log(file);\n    },\n    handleImageAdded() {\n      // console.log('upload image');\n    },\n    async submit() {\n      try {\n        //添加 \n        fun = await this.$api.dashboard.addGoods;\n        let data = {\n          ...this.ruleFrom\n        };\n        if (this.goodsId) {\n          fun = await this.$api.dashboard.upGoods;\n          data.goodsCategoryId = this.goodsCategoryId;\n          data.goodsId = this.goodsId;\n        }\n      } catch (_) {\n        console.log('错误：', _);\n      }\n    }\n  },\n  components: {\n    VueEditor\n  }\n};","map":{"version":3,"mappings":";AAsFA;AAEA;EACAA;EACAC;IACA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;QACAX;UAAAY;UAAAC;UAAAC;QAAA;QACAb;UAAAW;UAAAC;UAAAC;QAAA;QACAZ;UAAAU;UAAAC;UAAAC;QAAA;QACAX;UAAAS;UAAAC;UAAAC;QAAA;QACAR;UAAAM;UAAAC;UAAAC;QAAA;MACA;MACAC;MACAC;QACAC;QACA;UACA;YAAAC;UAAA;UACA;YACA;cAAAC;cAAA/B;YAAA;YAEA;cACAgC;YACA;cACAA;YACA;UACA;YACAC;UACA;UACA;YACAC;YACAC;YACAC;UACA;UACA;UACAC;QACA;MACA;IAEA;EACA;EACAT;IACAU;MACAC;MACAC;IACA;EACA;EACA;IACA;IACA;MACA;IACA;EAEA;EACAC;IACA;MACA;QACA;UAAAV;UAAA/B;QAAA;QACA;UACA;YAAA0C;UAAA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;UACA;QACA;MAEA;QACAT;MACA;IACA;IACA;IACAU;MACA;IACA;IACA;MAAAC;IAAA;MACA;QAEA;UAAAb;UAAA/B;QAAA;QACA;UACA;UACA;QACA;MACA;QACAiC;MACA;MACA;IACA;IACAY;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;IACA;IACA;MACA;QACA;QACAC;QAEA;UAAA;QAAA;QACA;UACAA;UACAhD;UACAA;QACA;MAGA;QACAiC;MACA;IACA;EACA;EACAgB;IACAC;EACA;AAGA","names":["name","data","radio","dialogImageUrl","dialogVisible","disabled","content","flag","num","num2","num3","ruleFrom","goodsIntro","goodsName","originalPrice","sellingPrice","stockNum","tag","goodsSellStatus","goodsCoverImg","goodsDetailContent","goodsCategoryId","goodsId","tabVal","rules","required","message","trigger","options","props","lazy","level","resultCode","that","console","value","label","leaf","resolve","id","type","default","methods","goods","handleRemove","file","handlePictureCardPreview","handleDownload","handleImageAdded","fun","components","VueEditor"],"sourceRoot":"src/views/Dashboard","sources":["Add.vue"],"sourcesContent":["<template>\r\n    <div class=\"Add\">\r\n        <el-form ref=\"formIns\" :rules=\"rules\" :model=\"ruleFrom\" label-width=\"80px\">\r\n            <el-form-item label=\"商品分类\">\r\n                <div class=\"block\">\r\n                    <el-cascader :props=\"props\" v-model=\"tabVal\"></el-cascader>\r\n                </div>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品名称\" prop=\"goodsName\">\r\n                <el-input placeholder=\"请输入商品名称\" v-model.trim=\"ruleFrom.goodsName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品简介\" prop=\"goodsIntro\">\r\n                <el-input type=\"textarea\" placeholder=\"请输入商品简介（100字）\" v-model.trim=\"ruleFrom.goodsIntro\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"originalPrice\">\r\n                <el-input-number controls-position=\"right\" :min=\"0\" v-model=\"num\" placeholder=\"请输入商品价格\"\r\n                    v-model.trim=\"ruleFrom.originalPrice\">\r\n                </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品售卖价\" prop=\"sellingPrice\">\r\n                <el-input-number controls-position=\"right\" placeholder=\"请输入商品售价\" :min=\"0\" v-model=\"num2\"\r\n                    v-model.trim=\"ruleFrom.sellingPrice\">\r\n                </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品库存\" prop=\"stockNum\">\r\n                <el-input-number controls-position=\"right\" :min=\"0\" placeholder=\"请输入商品库存\" v-model=\"num3\"\r\n                    v-model.trim=\"ruleFrom.stockNum\">\r\n                </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品标签\" prop=\"tag\">\r\n                <el-input placeholder=\"请输入商品小标签\" v-model.trim=\"ruleFrom.tag\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"上架状态\" prop=\"goodsSellStatus\">\r\n                <template>\r\n                    <el-radio-group v-model.trim=\"ruleFrom.goodsSellStatus\">\r\n                        <el-radio :label=\"0\">上架</el-radio>\r\n                        <el-radio :label=\"1\">下架</el-radio>\r\n                    </el-radio-group>\r\n                </template>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"商品主图\" prop=\"goodsCoverImg\">\r\n                <!-- <el-upload action=\"#\" list-type=\"picture-card\" :auto-upload=\"false\" :limit=\"1\"\r\n                    v-show=\"flag ? true : false\">\r\n                    <i slot=\"default\" class=\"el-icon-plus\"></i>\r\n                    <div slot=\"file\" slot-scope=\"{file}\">\r\n                        <img class=\"el-upload-list__item-thumbnail\" :src=\"ruleFrom.goodsCoverImg\" alt=\"\">\r\n                        <span class=\"el-upload-list__item-actions\">\r\n                            <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreview(file)\">\r\n                                <i class=\"el-icon-zoom-in\"></i>\r\n                            </span>\r\n                            <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleDownload(file)\">\r\n                                <i class=\"el-icon-download\"></i>\r\n                            </span>\r\n                            <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\r\n                                <i class=\"el-icon-delete\"></i>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </el-upload> -->\r\n                <el-upload class=\"avatar-uploader\" action=\"\" accept=\".jpg,.jpeg,.png,.gif\" :show-file-list=\"false\"\r\n                    :multiple=\"false\" :http-request=\"uploadImg\">\r\n\r\n                    <img v-if=\"ruleFrom.goodsCoverImg\" :src=\"ruleFrom.goodsCoverImg\" class=\"avatar-uploader-img\"\r\n                        alt=\"\" />\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                </el-upload>\r\n                <el-dialog :visible.sync=\"dialogVisible\">\r\n                    <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\r\n                </el-dialog>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"详情内容\" prop=\"goodsDetailContent\">\r\n                <div class=\"editor-container\">\r\n\r\n                    <vue-editor id=\"editor\" useCustomImageHandler @imageAdded=\"handleImageAdded\"\r\n                        v-model.trim=\"ruleFrom.goodsDetailContent\">\r\n                    </vue-editor>\r\n                </div>\r\n            </el-form-item>\r\n            <el-button type=\"primary\" @click=\"submit\">立即创建</el-button>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n   \r\n<script>\r\nimport { VueEditor } from \"vue2-editor/dist/vue2-editor.core.js\";\r\n\r\nexport default {\r\n    name: \"Add\",\r\n    data() {\r\n        let that = this;\r\n        return {\r\n            radio: 0,\r\n            dialogImageUrl: '',\r\n            dialogVisible: false,\r\n            disabled: false,\r\n            content: '请输入正文',\r\n            flag: true,\r\n            //计数器\r\n            num: 0,\r\n            num2: 0,\r\n            num3: 0,\r\n            ruleFrom: {\r\n                goodsIntro: \"\",\r\n                goodsName: \"\",\r\n                originalPrice: \"\",\r\n                sellingPrice: \"\",\r\n                stockNum: \"\",\r\n                tag: \"\",\r\n                goodsSellStatus: \"\",\r\n                goodsCoverImg: \"\",\r\n                goodsDetailContent: \"\",\r\n            },\r\n            goodsCategoryId: null,\r\n            goodsId: null,\r\n            tabVal: [],\r\n            rules: {\r\n                goodsName: [{ required: true, message: '请填写商品名称', trigger: 'blur' }],\r\n                originalPrice: [{ required: true, message: '请填写商品价格', trigger: 'blur' }],\r\n                sellingPrice: [{ required: true, message: '请填写商品售价', trigger: 'blur' }],\r\n                stockNum: [{ required: true, message: '请填写商品库存', trigger: 'blur' }],\r\n                goodsCoverImg: [{ required: true, message: '请上传主图', trigger: 'blur' }],\r\n            },\r\n            options: [],\r\n            props: {\r\n                lazy: true,\r\n                async lazyLoad(node, resolve) {\r\n                    const { level } = node;\r\n                    try {\r\n                        let { resultCode, data } = await that.$api.dashboard.queryGoodsClassify(1, 1000, node.level + 1, node.value);\r\n\r\n                        if (+resultCode === 200) {\r\n                            that.options = data.list;\r\n                        } else {\r\n                            that.$message.error('null')\r\n                        }\r\n                    } catch (_) {\r\n                        console.log('错误：', _);\r\n                    }\r\n                    const nodes = that.options.map(item => ({\r\n                        value: item.categoryId,\r\n                        label: item.categoryName,\r\n                        leaf: level >= 2\r\n                    }));\r\n                    // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n                    resolve(nodes);\r\n                }\r\n            },\r\n\r\n        };\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number,\r\n            default: 0,\r\n        }\r\n    },\r\n    async created() {\r\n        let ids = this.$route.query.id\r\n        if (ids) {\r\n            this.init(ids);\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        async init(ids) {\r\n            try {\r\n                let { resultCode, data } = await this.$api.model.queryGoodsInfo(ids);\r\n                if (+resultCode === 200) {\r\n                    let { goods } = data;\r\n                    this.goodsCategoryId = goods.goodsCategoryId;\r\n                    this.goodsId = goods.goodsId;\r\n                    this.ruleFrom = goods;\r\n                    this.tabVal.push(data.firstCategory.categoryId)\r\n                    this.tabVal.push(data.secondCategory.categoryId)\r\n                    this.tabVal.push(data.thirdCategory.categoryId)\r\n                } else {\r\n                    this.$message.error('获取失败！')\r\n                }\r\n\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n        },\r\n        /* 上传图片相关的 */\r\n        handleRemove(file) {\r\n            this.dialogImageUrl = '';\r\n        },\r\n        async uploadImg({ file }) {\r\n            try {\r\n\r\n                let { resultCode, data } = await this.$api.upload(file);\r\n                if (+resultCode === 200) {\r\n                    this.ruleFrom.goodsCoverImg = data;\r\n                    return;\r\n                }\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n            this.$message.error('图片上传失败，请稍后再试！');\r\n        },\r\n        handlePictureCardPreview(file) {\r\n            this.flag = false;\r\n            this.dialogImageUrl = file.url;\r\n            this.dialogVisible = true;\r\n        },\r\n        handleDownload(file) {\r\n            // console.log(file);\r\n        },\r\n\r\n        handleImageAdded() {\r\n            // console.log('upload image');\r\n        },\r\n        async submit() {\r\n            try {\r\n//添加 \r\n                fun = await this.$api.dashboard.addGoods;\r\n\r\n                let data = { ...this.ruleFrom };\r\n                if (this.goodsId) {\r\n                    fun = await this.$api.dashboard.upGoods;\r\n                    data.goodsCategoryId = this.goodsCategoryId;\r\n                    data.goodsId = this.goodsId;\r\n                }\r\n\r\n\r\n            } catch (_) {\r\n                console.log('错误：', _);\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        VueEditor\r\n    },\r\n\r\n\r\n};\r\n</script> \r\n  \r\n<style lang=\"less\" scoped>\r\n@import \"~vue2-editor/dist/vue2-editor.css\";\r\n/* Import the Quill styles you want */\r\n@import \"~quill/dist/quill.core.css\";\r\n@import \"~quill/dist/quill.bubble.css\";\r\n@import \"~quill/dist/quill.snow.css\";\r\n\r\n.Add {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: 20px;\r\n    margin-bottom: 50px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ebeef5;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n\r\n\r\n    :deep(#editor) {\r\n        height: 300px;\r\n    }\r\n\r\n    :deep(.el-form-item__label) {\r\n        width: 82px !important;\r\n    }\r\n\r\n    :deep(.el-form-item__content) {\r\n        margin-left: 82px !important;\r\n    }\r\n\r\n    /deep/input {\r\n        width: 298px;\r\n        height: 38px;\r\n        padding: 0 15px;\r\n    }\r\n\r\n    /deep/.el-textarea {\r\n        width: 298px;\r\n        height: 38px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    /deep/.el-input-number {\r\n        width: 298px;\r\n    }\r\n\r\n    /deep/.el-button {\r\n        margin-left: 80px;\r\n    }\r\n\r\n    .avatar-uploader-icon,\r\n    .avatar-uploader-img {\r\n        display: block;\r\n        box-sizing: border-box;\r\n        width: 120px;\r\n        height: 120px;\r\n        line-height: 120px;\r\n        font-size: 24px;\r\n        color: #8c939d;\r\n        border: 1px dashed #d9d9d9;\r\n        cursor: pointer;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}